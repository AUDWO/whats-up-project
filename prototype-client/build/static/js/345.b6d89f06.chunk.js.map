{"version":3,"file":"static/js/345.b6d89f06.chunk.js","mappings":"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","sources":["StyledComponents/CommonCpStyle/Comment/CommentConfigModalCpSt.js","Components/Common/CommentConfigModal/CommentConfigModalCp.js","StyledComponents/PostStyle/PostComment/PostCommentsCpSt.js","StyledComponents/MoreStoryStyle/MoreStoryCommentCpSt.js","StyledComponents/PostStyle/PostCommentCpSt.js","StyledComponents/PostStyle/PostReplyComment/PostReplyCommentCpSt.js","Components/Post/PostReplyComment/PostReplyComment.js","Components/Post/PostComment/PostCommentContactCp.js","StyledComponents/PostStyle/PostReplyComment/PostReplyCommentInputSt.js","Components/Post/PostReplyCommentInput/PostReplyCommentInputCp.js","Components/Post/PostComment/PostCommentCp.js","Components/Post/PostCommentInput/PostCommentInput.js","Components/Post/PostComment/PostCommentsCp.js"],"sourcesContent":["import styled from \"styled-components\";\n//취소\nimport { AiOutlineCloseCircle } from \"react-icons/ai\";\n\n//수정\nimport { AiOutlineEdit } from \"react-icons/ai\";\n\n//휴지통\n\nimport { RiDeleteBinLine } from \"react-icons/ri\";\n\nexport const CommentConfigCloseIcon = styled(AiOutlineCloseCircle)`\n  color: red;\n  margin-right: 3px;\n`;\n\nexport const CommentDeleteIcon = styled(RiDeleteBinLine)`\n  margin-right: 3px;\n`;\n\nexport const CommentEditIcon = styled(AiOutlineEdit)`\n  margin-right: 3px;\n`;\n\nexport const CommentConfigModal = styled.div`\n  position: absolute;\n  right: ${(props) => props.right};\n  left: ${(props) => props.left};\n  bottom: ${(props) => props.bottom};\n  top: ${(props) => props.top};\n  width: 100px;\n  height: 60px;\n  border-radius: 10px;\n  border: none;\n  background-color: white;\n`;\n\nexport const CommentConfigModalOption = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 14px;\n  height: 30px;\n  cursor: pointer;\n`;\n","import React, { useRef, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useRecoilState, useSetRecoilState } from \"recoil\";\n\n//Styled-Component\nimport {\n  CommentConfigModal,\n  CommentConfigModalOption,\n  CommentDeleteIcon,\n  CommentConfigCloseIcon,\n} from \"../../../StyledComponents/CommonCpStyle/Comment/CommentConfigModalCpSt\";\n\n//Atoms\nimport ModalOpenAtom from \"../../../store/ModalOpenAtom\";\n\n//Component\nimport CustomUseMutation from \"../../../customHooks/CustomUseMutation\";\n\nconst CommentConfigModalCp = ({\n  contentType,\n  commentId,\n  commentType,\n  contentId,\n  commentIdOfReplyComment,\n  offset,\n}) => {\n  const setCommentConfigModalOpen = useSetRecoilState(\n    ModalOpenAtom(`${contentType}CommentConfigModal${commentId}`)\n  );\n\n  const CommentConfigModalRef = useRef(null);\n\n  useEffect(() => {\n    const handleOutClick = (e) => {\n      if (!CommentConfigModalRef.current?.contains(e.target)) {\n        setCommentConfigModalOpen(false);\n      }\n    };\n    document.addEventListener(\"click\", handleOutClick);\n    return () => {\n      document.removeEventListener(\"click\", handleOutClick);\n    };\n  }, []);\n\n  const queryKeyArrMadeByCommentType = (() => {\n    if (commentType === \"comment\") return `${contentType}Comments-${contentId}`;\n    if (commentType === \"replyComment\")\n      return [`${contentType}ReplyComments-${commentIdOfReplyComment}`];\n  })();\n\n  const deleteComments = async () => {\n    try {\n      return await axios.delete(`/delete/${contentType}-comment/${commentId}`);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const { mutate } = CustomUseMutation(\n    deleteComments,\n    queryKeyArrMadeByCommentType,\n    () => {\n      setCommentConfigModalOpen(false);\n    }\n  );\n\n  const handleCommentDelete = async () => {\n    try {\n      mutate();\n    } catch (error) {\n      console.error(\"Delete action failed\", error);\n    }\n  };\n\n  const { top, left, right, bottom } = offset;\n\n  return (\n    <CommentConfigModal\n      ref={CommentConfigModalRef}\n      bottom={bottom}\n      top={top}\n      right={right}\n      left={left}\n    >\n      <CommentConfigModalOption\n        onClick={() => {\n          handleCommentDelete();\n        }}\n      >\n        <CommentDeleteIcon />\n        삭제\n      </CommentConfigModalOption>\n      <CommentConfigModalOption\n        onClick={() => {\n          setCommentConfigModalOpen(false);\n        }}\n      >\n        <CommentConfigCloseIcon />\n        취소\n      </CommentConfigModalOption>\n    </CommentConfigModal>\n  );\n};\n\nexport default CommentConfigModalCp;\n","import styled from \"styled-components\";\nimport { AiOutlineClose } from \"react-icons/ai\";\n\nexport const CommentsWrapper = styled.div`\n  height: 470px;\n  overflow-y: scroll;\n`;\n\nexport const CommentModalWrapper = styled.div`\n  box-shadow: 0px 1px 4px rgba(0, 0, 0, 0.2);\n  background-color: #f8f9fa;\n  border-radius: 0px 10px 10px 0px;\n  z-index: 3;\n  width: 380px;\n  height: 585px;\n  position: absolute;\n  transition: all 0.3s ease-in-out;\n  transform: ${({ click }) =>\n    click ? \"translate3d(300px, 0, 0)\" : \"translate3d(0, 0, 0)\"};\n`;\n\nexport const CommentClosingIcon = styled(AiOutlineClose)`\n  font-size: 25px;\n  font-weight: 100;\n  cursor: pointer;\n`;\n\nexport const CommentOptionWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 0px 10px 0px 10px;\n  height: 50px;\n`;\n\nexport const CommentTitle = styled.div`\n  font-size: 20px;\n  font-weight: 700;\n`;\n\nexport const CommentWrapper = styled.div`\n  width: 100%;\n  min-height: 120px;\n  height: auto;\n  padding: 10px;\n  margin-bottom: 10px;\n`;\n\nexport const CommentInputWrapper = styled.div`\n  padding: 5px 5px 5px 13px;\n  height: 60px;\n  width: 100%;\n  display: flex;\n  align-items: center;\n`;\n\nexport const CommentInput = styled.input`\n  font-size: 15px;\n  background-color: #f8f9fa;\n  height: 40px;\n  width: 80%;\n  resize: none;\n  outline: none;\n  border: none;\n  border-bottom: 2px solid black;\n  place\n`;\n\nexport const CommentPostButton = styled.button`\n  width: 20%;\n  height: 40px;\n  border-bottom: 2px solid black;\n  color: ${(props) => (props.comment ? \"black\" : \"#c7c7c8\")};\n  place\n\n`;\n","import styled from \"styled-components\";\n\nimport { LuSmilePlus } from \"react-icons/lu\";\nimport { HiMiniCheckBadge } from \"react-icons/hi2\";\nimport { GiWolfHowl } from \"react-icons/gi\";\nimport { BiPencil } from \"react-icons/bi\";\nimport { PiDotsThreeVerticalBold } from \"react-icons/pi\";\nexport const MoreStoryCommentWrapper = styled.div`\n  width: 100%;\n  height: auto;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n  background-color: #f8f9fa;\n`;\n\nexport const MoreStoryCommentContentsWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 700px;\n  height: auto;\n  margin-top: 50px;\n`;\n\nexport const MoreStoryCommentTitle = styled.div`\n  width: 100%;\n  font-size: 20px;\n  font-weight: 500;\n  border: none;\n  margin-bottom: 20px;\n`;\nexport const MoreStoryCommnetInputWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  padding: 10px;\n  width: 100%;\n  height: 55px;\n  font-size: 20px;\n  border: none;\n  border-radius: 8px;\n  background-color: #e8e8e8;\n`;\n\nexport const MoreStoryCommentInputIcon = styled(BiPencil)`\n  font-size: 25px;\n  margin-right: 20px;\n`;\nexport const MoreStoryCommentInput = styled.textarea`\n  width: 600px;\n  height: 30px;\n  font-size: 20px;\n  vertical-align: center;\n  outline: none;\n  border: none;\n  resize: none;\n  border-radius: 8px;\n  background-color: #e8e8e8;\n`;\n\nexport const StoryCommentPostButton = styled.div`\n  font-size: 15px;\n  color: ${(props) => (props.comment ? \"black\" : \"#c7c7c8\")};\n  cursor: pointer;\n`;\n\nexport const MoreStoryComment = styled.div`\n  display: flex;\n  width: 100%;\n  min-height: 120px;\n  height: auto;\n  padding: 25px 0px 10px 15px;\n  border-bottom: 0.5px solid black;\n`;\n\nexport const ProfileWrapper = styled.div`\n  width: 50px;\n  height: 50px;\n  margin-right: 10px;\n`;\nexport const MoreStoryCommentProfile = styled.div`\n  width: 40px;\n  height: 40px;\n  border-radius: 50%;\n  background-color: black;\n  margin-right: 20px;\n`;\n\nexport const CommentWrapper = styled.div`\n  width: 100%;\n`;\n\nexport const ProfileInfoWrapper = styled.div`\n  display: flex;\n`;\n\nexport const ProfileNameWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  position: relative;\n`;\n\nexport const ProfileName = styled.div`\n  font-size: 15px;\n  font-weight: 700;\n  margin-bottom: 10px;\n  margin-right: 6px;\n`;\n\nexport const CommentMoreIcon = styled(PiDotsThreeVerticalBold)`\n  font-size: 30px;\n  color: gray;\n  &:hover {\n    color: black;\n  }\n  cursor: pointer;\n`;\nexport const CommentContent = styled.div`\n  height: auto;\n  line-height: 1.5;\n`;\n\nexport const CommentContact = styled.div`\n  display: flex;\n  align-items: center;\n  margin-top: 20px;\n  margin-bottom: 10px;\n`;\n\nexport const CommentContactIcon = styled(LuSmilePlus)`\n  margin-right: 20px;\n  font-size: 25px;\n  cursor: pointer;\n`;\n\nexport const CommentContactReply = styled.div`\n  cursor: pointer;\n`;\n\nexport const CommentSpace = styled.div`\n  width: 100%;\n  height: 100px;\n`;\n\nexport const OfficialBadgeIcon = styled(HiMiniCheckBadge)`\n  color: #f7dd07;\n`;\n\nexport const WolfIcon = styled(GiWolfHowl)`\n  font-size: 46px;\n  color: #f7dd07;\n  border-radius: 50%;\n  border: 1px solid white;\n  background-color: black;\n`;\n","import styled from \"styled-components\";\nimport { CommentWrapper } from \"../MoreStoryStyle/MoreStoryCommentCpSt\";\n\n//icons\nimport { AiFillHeart } from \"react-icons/ai\";\nimport { AiOutlineHeart } from \"react-icons/ai\";\nimport { BiSolidDownArrow } from \"react-icons/bi\";\nimport { BsThreeDots } from \"react-icons/bs\";\n//취소\nimport { AiOutlineCloseCircle } from \"react-icons/ai\";\n//휴지통\nimport { RiDeleteBinLine } from \"react-icons/ri\";\n\nexport const MoreReplyButtonIcon = styled(BiSolidDownArrow)`\n  margin-right: 5px;\n`;\nexport const MoreReplyButtonWrapper = styled.div`\n  display: flex;\n  ${MoreReplyButtonIcon} {\n    transform: ${(props) =>\n      props.moreReplyOpen ? \"rotate(180deg)\" : \"rotate(0deg)\"};\n  }\n  color: #236bd8;\n  margin-top: 7px;\n  margin-bottom: 7px;\n  &:hover {\n    border-radius: 15px;\n    background-color: #c5d5f5;\n  }\n  width: 70px;\n  padding: 5px 10px;\n  cursor: pointer;\n`;\n\nexport const MoreReplyTitle = styled.div``;\n\nexport const CommentWrapper2 = styled(CommentWrapper)`\n  margin: 10px;\n  width: 360px;\n`;\n\nexport const CommentLikeIcon = styled(AiOutlineHeart)`\n  cursor: pointer;\n`;\n\nexport const CommentLikeFillIcon = styled(AiFillHeart)`\n  cursor: pointer;\n  color: #f7dd07;\n`;\n\nexport const CommentProfileWrapper = styled.div`\n  display: flex;\n  height: auto;\n`;\n\nexport const CommentProfileImg = styled.img`\n  width: 40px;\n  height: 40px;\n  border-radius: 50%;\n  background-color: black;\n  margin-right: 15px;\n  object-fit: cover;\n`;\n\nexport const CommentProfileInfo = styled.div`\n  width: 300px;\n  height: auto;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const CommentUserNicknameWrapper = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n`;\n\nexport const CommentUserNickname = styled.div`\n  font-size: 13px;\n  margin-bottom: 5px;\n`;\n\nexport const CommentContent = styled.div`\n  min-height: 30px;\n  height: auto;\n  margin-bottom: 10px;\n`;\n\nexport const LikeButtonWrapper = styled.div`\n  display: flex;\n  width: 20px;\n`;\n\nexport const CommentContactWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 15px;\n  position: relative;\n`;\n\nexport const CommentContactDiv = styled.div`\n  display: flex;\n`;\n\nexport const CommentLikeCount = styled.div`\n  font-size: 13px;\n  margin-right: 15px;\n`;\n\nexport const CommentConfigIcon = styled(BsThreeDots)`\n  cursor: pointer;\n`;\n\nexport const CommentConfigCloseIcon = styled(AiOutlineCloseCircle)`\n  color: red;\n  margin-right: 3px;\n`;\n\nexport const CommentDeleteIcon = styled(RiDeleteBinLine)`\n  margin-right: 3px;\n`;\n\nexport const CommentConfigModal = styled.div`\n  position: absolute;\n  bottom: -10px;\n  right: -10px;\n  width: 100px;\n  height: 90px;\n  border-radius: 10px;\n  border: none;\n  background-color: white;\n`;\n\nexport const CommentConfigModalOption = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 14px;\n  height: 30px;\n  cursor: pointer;\n`;\n\nexport const CommentReplyButtom = styled.button`\n  font-size: 13px;\n`;\n","import styled from \"styled-components\";\n\nimport { AiFillHeart } from \"react-icons/ai\";\nimport { AiOutlineHeart } from \"react-icons/ai\";\nimport { BsThreeDots } from \"react-icons/bs\";\nimport { CommentWrapper } from \"../../MoreStoryStyle/MoreStoryCommentCpSt\";\n\nexport const CommentConfigIcon = styled(BsThreeDots)`\n  cursor: pointer;\n`;\n\n//---\nexport const CommentWrapper2 = styled(CommentWrapper)`\n  margin-top: 10px;\n`;\n\nexport const CommentLikeIcon = styled(AiOutlineHeart)``;\n\nexport const CommentLikeFillIcon = styled(AiFillHeart)`\n  color: #f7dd07;\n`;\n\nexport const CommentProfileWrapper = styled.div`\n  display: flex;\n  height: auto;\n`;\n\nexport const CommentProfileImg = styled.img`\n  width: 40px;\n  height: 40px;\n  border-radius: 50%;\n  background-color: black;\n  margin-right: 15px;\n`;\n\nexport const CommentProfileInfo = styled.div`\n  width: 250px;\n  height: auto;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const CommentUserNicknameWrapper = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n`;\n\nexport const CommentUserNickname = styled.div`\n  font-size: 13px;\n  margin-bottom: 5px;\n`;\n\nexport const CommentContent = styled.div`\n  min-height: 20px;\n  height: auto;\n  margin-bottom: 10px;\n  margin-top: 5px;\n`;\n\nexport const LikeButtonWrapper = styled.div`\n  display: flex;\n  width: 20px;\n`;\n\nexport const CommentContactWrapper = styled.div`\n  display: flex;\n  margin-bottom: 15px;\n  position: relative;\n`;\n\nexport const CommentLikeCount = styled.div`\n  font-size: 13px;\n  margin-right: 15px;\n`;\n\nexport const CommentReplyButtom = styled.button`\n  font-size: 13px;\n`;\n","import React, { useState, useEffect, useMemo } from \"react\";\nimport axios from \"axios\";\nimport { useRecoilState } from \"recoil\";\nimport styled from \"styled-components\";\n\n//Styled-Components\nimport {\n  CommentWrapper2,\n  CommentProfileWrapper,\n  CommentProfileImg,\n  CommentProfileInfo,\n  CommentUserNicknameWrapper,\n  CommentUserNickname,\n  LikeButtonWrapper,\n  CommentLikeFillIcon,\n  CommentLikeIcon,\n  CommentContent,\n  CommentContactWrapper,\n  CommentLikeCount,\n  CommentConfigIcon,\n} from \"../../../StyledComponents/PostStyle/PostReplyComment/PostReplyCommentCpSt\";\n\n//component\nimport CommentConfigModalCp from \"../../Common/CommentConfigModal/CommentConfigModalCp\";\n\n//atoms\nimport ModalOpenAtom from \"../../../store/ModalOpenAtom\";\nimport { useQuery } from \"@tanstack/react-query\";\n\n//useMutation hook\nimport CustomUseMutation from \"../../../customHooks/CustomUseMutation\";\n\nconst PostReplyComment = ({ replyComment, commentId }) => {\n  const [replyCommentLikeCount, setReplyCommentLikeCount] = useState(0);\n  const [replyCommentLikeCheck, setReplyCommentLikeCheck] = useState(false);\n\n  const fetchPostReplyCommentLikeInfo = async () => {\n    try {\n      //postCommentLikeInfo Update\n      return await axios.get(`\n        /page/render-only-postcomment-likeinfo/${replyComment.id}\n        `);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const { data: replyCommentLikeCountInfo, isLoading } = useQuery({\n    queryKey: [`replyComments-${replyComment.id}`],\n    queryFn: fetchPostReplyCommentLikeInfo,\n  });\n\n  useEffect(() => {\n    setReplyCommentLikeCount(\n      replyCommentLikeCountInfo?.data.postCommentLikeCount.length\n    );\n    setReplyCommentLikeCheck(replyCommentLikeCountInfo?.data.likeCheck);\n  }, [replyCommentLikeCountInfo?.data]);\n\n  const [postReplyCommentConfigModalOpen, setPostReplyCommentConfigModalOpen] =\n    useRecoilState(ModalOpenAtom(`postCommentConfigModal${replyComment.id}`));\n\n  //댓글 좋아요를 눌렀는지 확인해주는 함수\n\n  const postLike = async () => {\n    try {\n      return await axios.post(`/comment/post/like/${replyComment.id}`);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const postUnLike = async () => {\n    try {\n      return await axios.post(`/comment/post/unlike/${replyComment.id}`);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const { mutate: handlePostLike, isLoading: likeLoading } = CustomUseMutation(\n    postLike,\n    [`postReplyComments-${commentId}`]\n  );\n\n  const { mutate: handlePostUnLike, isLoading: unLikeLoading } =\n    CustomUseMutation(postUnLike, [`postReplyComments-${commentId}`]);\n\n  const handleLike = () => {\n    setReplyCommentLikeCount((prev) => prev + 1);\n    setReplyCommentLikeCheck(true);\n    handlePostLike();\n  };\n  const handleUnLike = () => {\n    setReplyCommentLikeCount((prev) => prev - 1);\n    setReplyCommentLikeCheck(false);\n    handlePostUnLike();\n  };\n\n  const offset = useMemo(() => {\n    return { bottom: \"-10px\", right: \"-10px\" };\n  }, []);\n\n  if (isLoading || likeLoading || unLikeLoading) {\n    return (\n      <CommentWrapper2 index={1}>\n        <CommentProfileWrapper>\n          <FakeCommentProfileImg />\n          <CommentProfileInfo>\n            <CommentUserNicknameWrapper>\n              <FakeCommentUserNickname />\n            </CommentUserNicknameWrapper>\n            <CommentContent>\n              <FakeCommentUserNickname2 />\n            </CommentContent>\n            <CommentContactWrapper>\n              <FakeCommentUserNickname />\n            </CommentContactWrapper>\n          </CommentProfileInfo>\n        </CommentProfileWrapper>\n      </CommentWrapper2>\n    );\n  }\n\n  return (\n    <CommentWrapper2 index={1}>\n      <CommentProfileWrapper>\n        <CommentProfileImg />\n        <CommentProfileInfo>\n          <CommentUserNicknameWrapper>\n            <CommentUserNickname>\n              {replyComment.User.nickname}\n            </CommentUserNickname>\n            <LikeButtonWrapper>\n              {replyCommentLikeCheck ? (\n                <CommentLikeFillIcon\n                  onClick={() => {\n                    handleUnLike();\n                  }}\n                />\n              ) : (\n                <CommentLikeIcon\n                  onClick={() => {\n                    handleLike();\n                  }}\n                />\n              )}\n            </LikeButtonWrapper>\n          </CommentUserNicknameWrapper>\n          <CommentContent>{replyComment.content}</CommentContent>\n          <CommentContactWrapper>\n            <CommentLikeCount>좋아요 {replyCommentLikeCount}</CommentLikeCount>\n            <>\n              <CommentConfigIcon\n                onClick={() => {\n                  setTimeout(() => {\n                    setPostReplyCommentConfigModalOpen(true);\n                  }, 0);\n                }}\n              />\n              {postReplyCommentConfigModalOpen && (\n                <CommentConfigModalCp\n                  contentType={\"post\"}\n                  commentId={replyComment.id}\n                  commentIdOfReplyComment={commentId}\n                  commentType={\"replyComment\"}\n                  offset={offset}\n                />\n              )}\n            </>\n          </CommentContactWrapper>\n        </CommentProfileInfo>\n      </CommentProfileWrapper>\n    </CommentWrapper2>\n  );\n};\n\nexport default PostReplyComment;\n\nexport const FakeCommentProfileImg = styled.img`\n  width: 40px;\n  height: 40px;\n  border-radius: 50%;\n  background-color: gray;\n  opacity: 0.4;\n  margin-right: 15px;\n`;\n\nexport const FakeCommentUserNickname = styled.div`\n  font-size: 13px;\n  margin-bottom: 5px;\n  background-color: gray;\n  opacity: 0.4;\n  width: 87px;\n  height: 15px;\n`;\n\nexport const FakeCommentUserNickname2 = styled.div`\n  font-size: 13px;\n  background-color: gray;\n  opacity: 0.4;\n  width: 77px;\n  height: 15px;\n`;\n","import React from \"react\";\nimport { useRecoilState } from \"recoil\";\n\n//Styled-Components\nimport {\n  CommentContactWrapper,\n  CommentContactDiv,\n  CommentLikeCount,\n  CommentReplyButtom,\n  CommentConfigIcon,\n} from \"../../../StyledComponents/PostStyle/PostCommentCpSt\";\n\n//Component\nimport CommentConfigModalCp from \"../../Common/CommentConfigModal/CommentConfigModalCp\";\n\n//Atom\nimport ModalOpenAtom from \"../../../store/ModalOpenAtom\";\n\nconst PostCommentContactCp = ({ postCommentLikeCount, myComment, comment }) => {\n  const [postCommentConfigModalOpen, setPostCommentConfigModalOpen] =\n    useRecoilState(ModalOpenAtom(`postCommentConfigModal${comment.id}`));\n\n  const [replyInputOpen, setReplyInputOpen] = useRecoilState(\n    ModalOpenAtom(`replyComment${comment.id}`)\n  );\n\n  return (\n    <CommentContactWrapper>\n      <CommentContactDiv>\n        <CommentLikeCount>좋아요 {postCommentLikeCount}</CommentLikeCount>\n        <CommentReplyButtom onClick={() => setReplyInputOpen(!replyInputOpen)}>\n          답글 달기\n        </CommentReplyButtom>\n      </CommentContactDiv>\n\n      {myComment && (\n        <>\n          <CommentConfigIcon\n            onClick={(e) => {\n              e.stopPropagation();\n              setPostCommentConfigModalOpen(true);\n            }}\n          />\n          {postCommentConfigModalOpen && (\n            <CommentConfigModalCp\n              contentType={\"post\"}\n              commentId={comment.id}\n              commentType={\"comment\"}\n              contentId={comment.PostId}\n              offset={{ bottom: \"-10px\", right: \"-10px\" }}\n            />\n          )}\n        </>\n      )}\n    </CommentContactWrapper>\n  );\n};\n\nexport default PostCommentContactCp;\n","import styled from \"styled-components\";\n\nexport const PostReplyInputWrapper = styled.div`\n  border-bottom: 1px solid black;\n  display: flex;\n`;\n\nexport const PostReplyInput = styled.input`\n  width: 80%;\n  border: none;\n  background-color: #f8f9fa;\n  margin-top: 10px;\n  margin-bottom: 5px;\n  font-size: 15px;\n`;\n\nexport const ReplyButtonWrapper = styled.div`\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n  width: 80px;\n`;\nexport const ReplyCancelButton = styled.div`\n  font-size: 13px;\n  cursor: pointer;\n  color: gray;\n  $:hover {\n    color: black;\n  }\n`;\n\nexport const ReplyInputButton = styled.div`\n  font-size: 13px;\n  cursor: pointer;\n  color: gray;\n  $:hover {\n    color: black;\n  }\n`;\n","import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { useSetRecoilState } from \"recoil\";\n\n//Styled-Components\nimport {\n  PostReplyInputWrapper,\n  PostReplyInput,\n  ReplyButtonWrapper,\n  ReplyCancelButton,\n  ReplyInputButton,\n} from \"../../../StyledComponents/PostStyle/PostReplyComment/PostReplyCommentInputSt\";\n\n//Atoms\nimport ModalOpenAtom from \"../../../store/ModalOpenAtom\";\n\n//Component\nimport CustomUseMutation from \"../../../customHooks/CustomUseMutation\";\n\nconst PostReplyCommentInputCp = ({ comment }) => {\n  const [replyCommentContent, setReplyCommentContent] = useState(\"\");\n  const setReplyInputOpen = useSetRecoilState(\n    ModalOpenAtom(`replyComment${comment.id}`)\n  );\n\n  const createPostComment = async () => {\n    try {\n      const response = await axios.post(\"/comment/post\", {\n        content: replyCommentContent,\n        PostId: comment.PostId,\n        PostCommentId: comment.id,\n      });\n      return response;\n    } catch (error) {\n      console.log(`PostReplyComments Error ${error}`);\n    }\n  };\n\n  const { mutate } = CustomUseMutation(\n    createPostComment,\n    [`postReplyComments-${comment.id}`],\n    function callback() {\n      setReplyCommentContent(\"\");\n    }\n  );\n\n  return (\n    <PostReplyInputWrapper>\n      <PostReplyInput\n        value={replyCommentContent}\n        onChange={(e) => {\n          setReplyCommentContent(e.target.value);\n        }}\n      />\n      <ReplyButtonWrapper>\n        <ReplyCancelButton onClick={() => setReplyInputOpen(false)}>\n          취소\n        </ReplyCancelButton>\n        <ReplyInputButton\n          onClick={() => {\n            mutate();\n          }}\n        >\n          게시\n        </ReplyInputButton>\n      </ReplyButtonWrapper>\n    </PostReplyInputWrapper>\n  );\n};\n\nexport default PostReplyCommentInputCp;\n","import { useEffect, useState } from \"react\";\nimport { useRecoilValue } from \"recoil\";\nimport axios from \"axios\";\nimport styled from \"styled-components\";\nimport { useQuery } from \"@tanstack/react-query\";\n\n//Styled-Components\nimport {\n  CommentWrapper2,\n  CommentProfileWrapper,\n  CommentProfileImg,\n  CommentProfileInfo,\n  CommentUserNicknameWrapper,\n  CommentUserNickname,\n  LikeButtonWrapper,\n  CommentLikeFillIcon,\n  CommentLikeIcon,\n  CommentContent,\n  MoreReplyButtonWrapper,\n  MoreReplyButtonIcon,\n  MoreReplyTitle,\n} from \"../../../StyledComponents/PostStyle/PostCommentCpSt\";\n\n//Component\nimport PostReplyComment from \"../PostReplyComment/PostReplyComment\";\nimport SpinnerCp from \"../../Common/Spinner/SpinnerCp\";\nimport PostCommentContactCp from \"./PostCommentContactCp\";\nimport PostReplyCommentInputCp from \"../PostReplyCommentInput/PostReplyCommentInputCp\";\n\n//atoms\nimport ModalOpenAtom from \"../../../store/ModalOpenAtom\";\nimport UserInfoQuery from \"../../../customHooks/userInfoQuery\";\n\nconst PostCommentCp = ({ comment }) => {\n  const userInfo = UserInfoQuery();\n\n  //댓글 좋아요 상태\n  const [postCommentLikeCount, setPostCommentLikeCount] = useState(0);\n  const [commentLikeCheck, setCommentLikeCheck] = useState(false);\n\n  //대댓글 상태\n  const replyInputOpen = useRecoilValue(\n    ModalOpenAtom(`replyComment${comment.id}`)\n  );\n  const [ReplyCommentsOpen, setReplyCommentsOpen] = useState(false);\n\n  //좋아요 버튼 함수\n  const handleSubitCommentLike = async () => {\n    try {\n      await axios.post(`/comment/post/like/${comment.id}`);\n    } catch (error) {\n      console.error(error, \"handleSubmitCommentLike - Error\");\n    }\n  };\n  //좋아요 버튼 취소 함수\n  const handleSubmitCommentUnlike = async () => {\n    try {\n      await axios.post(`/comment/post/unlike/${comment.id}`);\n    } catch (error) {\n      console.error(error, \"handleSubmitCommentUnlike - Error\");\n    }\n  };\n\n  //댓글 좋아요 정보를 불러오는 함수 (api 폴더에서 따로 관리 할 예정)\n  const getPostCommentsInfo = async () => {\n    try {\n      const response = await axios.get(`\n      /page/render-only-postcomment-likeinfo/${comment.id}\n      `);\n      return response;\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  //댓글의 좋아요 정보를 불러옴\n  const commentLikeInfo = useQuery({\n    queryKey: [`postCommentLikeInfo${comment.id}`],\n    queryFn: getPostCommentsInfo,\n  });\n\n  //좋아요를 누르면 실행되는 함수\n  const handleCommentLike = () => {\n    setCommentLikeCheck(true);\n    setPostCommentLikeCount((prev) => prev + 1);\n    handleSubitCommentLike();\n  };\n\n  //좋아요 취소를 누르면 실행되는 함수\n  const handleCommentUnlike = () => {\n    setCommentLikeCheck(false);\n    setPostCommentLikeCount((prev) => prev - 1);\n    handleSubmitCommentUnlike();\n  };\n\n  useEffect(() => {\n    if (commentLikeInfo.data) {\n      setPostCommentLikeCount(\n        commentLikeInfo.data.data.postCommentLikeCount.length\n      );\n      setCommentLikeCheck(commentLikeInfo.data.data.likeCheck);\n    }\n  }, [commentLikeInfo.data]);\n\n  const getPostReplyComments = async () => {\n    try {\n      const response = await axios.get(\n        `/page/render-post-replycomment/${comment.id}`\n      );\n      return response;\n    } catch (error) {\n      console.error(error, \"getRostReplyComment - Error\");\n    }\n  };\n\n  //replyComments\n  const { data: replyComments, isLoading } = useQuery({\n    queryKey: [`postReplyComments-${comment.id}`],\n    queryFn: getPostReplyComments,\n  });\n\n  if (isLoading) {\n    return (\n      <SpinnerWrapper>\n        <SpinnerCp color=\"#f7dd07\" size=\"30px\" />\n      </SpinnerWrapper>\n    );\n  }\n\n  return (\n    <CommentWrapper2>\n      <CommentProfileWrapper>\n        <CommentProfileImg src={comment.User.profileImg} />\n        <CommentProfileInfo>\n          <CommentUserNicknameWrapper>\n            <CommentUserNickname>{comment.User.nickname}</CommentUserNickname>\n            <LikeButtonWrapper>\n              {commentLikeCheck ? (\n                <CommentLikeFillIcon\n                  onClick={() => {\n                    handleCommentUnlike();\n                  }}\n                />\n              ) : (\n                <CommentLikeIcon\n                  onClick={() => {\n                    handleCommentLike();\n                  }}\n                />\n              )}\n            </LikeButtonWrapper>\n          </CommentUserNicknameWrapper>\n          <CommentContent>{comment.content}</CommentContent>\n          <PostCommentContactCp\n            myComment={!!userInfo}\n            comment={comment}\n            postCommentLikeCount={postCommentLikeCount}\n          />\n          {replyInputOpen && <PostReplyCommentInputCp comment={comment} />}\n          {replyComments?.data.length >= 1 && (\n            <MoreReplyButtonWrapper\n              onClick={() => setReplyCommentsOpen(!ReplyCommentsOpen)}\n            >\n              <MoreReplyButtonIcon moreReplyOpen={ReplyCommentsOpen} />\n              <MoreReplyTitle>댓글</MoreReplyTitle>\n            </MoreReplyButtonWrapper>\n          )}\n          {ReplyCommentsOpen && (\n            <>\n              {replyComments.data.map((replyComment) => (\n                <PostReplyComment\n                  replyComment={replyComment}\n                  commentId={comment.id}\n                />\n              ))}\n            </>\n          )}\n        </CommentProfileInfo>\n      </CommentProfileWrapper>\n    </CommentWrapper2>\n  );\n};\n\nexport default PostCommentCp;\n\nconst SpinnerWrapper = styled.div`\n  width: 100%;\n  height: 90px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n","import React, { useState } from \"react\";\nimport axios from \"axios\";\n\n//Styled-Components\nimport {\n  CommentInputWrapper,\n  CommentInput,\n  CommentPostButton,\n} from \"../../../StyledComponents/PostStyle/PostComment/PostCommentsCpSt\";\n\n//Component\nimport CustomUseMutation from \"../../../customHooks/CustomUseMutation\";\nimport UserInfoQuery from \"../../../customHooks/userInfoQuery\";\n\nconst PostCommentInput = ({ postId }) => {\n  const userInfo = UserInfoQuery();\n  const [commentContent, setCommentContent] = useState(\"\");\n\n  const fetchPostComments = async () => {\n    await axios.post(\"/comment/post\", {\n      content: commentContent,\n      PostId: postId,\n    });\n  };\n\n  const { mutate: getPostComments } = CustomUseMutation(\n    fetchPostComments,\n    [`postComments-${postId}`],\n    () => {\n      setCommentContent(\"\");\n    }\n  );\n\n  return (\n    <CommentInputWrapper>\n      <CommentInput\n        value={commentContent}\n        readOnly={!userInfo.loginCheck}\n        onChange={(e) => setCommentContent(e.target.value)}\n        placeholder={\n          userInfo.loginCheck\n            ? \"댓글을 입력해 주세요\"\n            : \"로그인 후 댓글 이용이 가능합니다.\"\n        }\n      />\n      <CommentPostButton\n        comment={commentContent}\n        onClick={() => {\n          if (commentContent) {\n            getPostComments();\n          }\n        }}\n      >\n        게시\n      </CommentPostButton>\n    </CommentInputWrapper>\n  );\n};\n\nexport default PostCommentInput;\n","import React from \"react\";\nimport axios from \"axios\";\nimport { useRecoilState } from \"recoil\";\nimport { useQuery } from \"@tanstack/react-query\";\n\n//Styled-Component\nimport {\n  CommentClosingIcon,\n  CommentModalWrapper,\n  CommentOptionWrapper,\n  CommentTitle,\n  CommentsWrapper,\n} from \"../../../StyledComponents/PostStyle/PostComment/PostCommentsCpSt\";\n\n//Component\nimport PostCommentCp from \"./PostCommentCp\";\nimport PostCommentInput from \"../PostCommentInput/PostCommentInput\";\n\n//Atoms\nimport ModalOpenAtom from \"../../../store/ModalOpenAtom\";\n\nconst CommentModalCp = ({ postId }) => {\n  const [modalOpen, setModalOpen] = useRecoilState(\n    ModalOpenAtom(`commentModalOpen${postId}`)\n  );\n  const handleClick = () => {\n    setModalOpen(false);\n  };\n\n  const getPostComments = async () => {\n    try {\n      const response = await axios.get(`/page/render-post-comment/${postId}`);\n      return response;\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const { data } = useQuery({\n    queryKey: [`postComments-${postId}`],\n    queryFn: getPostComments,\n  });\n\n  return (\n    <>\n      <CommentModalWrapper click={modalOpen}>\n        <CommentOptionWrapper>\n          <CommentTitle>댓글</CommentTitle>\n          <CommentClosingIcon onClick={handleClick}>X</CommentClosingIcon>\n        </CommentOptionWrapper>\n        <CommentsWrapper>\n          {data?.data.map((comment) => (\n            <PostCommentCp comment={comment} />\n          ))}\n        </CommentsWrapper>\n        <PostCommentInput postId={postId} />\n      </CommentModalWrapper>\n    </>\n  );\n};\n\nexport default CommentModalCp;\n"],"names":["CommentConfigCloseIcon","styled","AiOutlineCloseCircle","_templateObject","_taggedTemplateLiteral","CommentDeleteIcon","RiDeleteBinLine","_templateObject2","CommentConfigModal","AiOutlineEdit","_templateObject3","div","_templateObject4","props","right","left","bottom","top","CommentConfigModalOption","_templateObject5","_ref","_ref2","_ref3","contentType","commentId","commentType","contentId","commentIdOfReplyComment","offset","setCommentConfigModalOpen","useSetRecoilState","ModalOpenAtom","concat","CommentConfigModalRef","useRef","useEffect","handleOutClick","e","_CommentConfigModalRe","current","contains","target","document","addEventListener","removeEventListener","queryKeyArrMadeByCommentType","_CustomUseMutation","CustomUseMutation","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","axios","delete","abrupt","sent","t0","console","error","stop","apply","arguments","mutate","_jsxs","ref","children","onClick","_callee2","_context2","handleCommentDelete","_jsx","CommentsWrapper","CommentModalWrapper","click","CommentClosingIcon","AiOutlineClose","CommentOptionWrapper","CommentTitle","CommentInputWrapper","_templateObject6","_templateObject7","CommentInput","input","_templateObject8","CommentPostButton","button","_templateObject9","comment","CommentWrapper","BiPencil","textarea","_templateObject10","_templateObject11","_templateObject12","_templateObject13","_templateObject14","PiDotsThreeVerticalBold","_templateObject15","_templateObject16","_templateObject17","LuSmilePlus","_templateObject18","_templateObject19","_templateObject20","HiMiniCheckBadge","_templateObject21","GiWolfHowl","_templateObject22","MoreReplyButtonIcon","BiSolidDownArrow","MoreReplyButtonWrapper","moreReplyOpen","MoreReplyTitle","CommentWrapper2","CommentLikeIcon","AiOutlineHeart","CommentLikeFillIcon","AiFillHeart","CommentProfileWrapper","CommentProfileImg","img","CommentProfileInfo","CommentUserNicknameWrapper","CommentUserNickname","CommentContent","LikeButtonWrapper","CommentContactWrapper","CommentContactDiv","CommentLikeCount","CommentConfigIcon","BsThreeDots","CommentReplyButtom","_ref4","replyComment","_useState","useState","_useState2","_slicedToArray","replyCommentLikeCount","setReplyCommentLikeCount","_useState3","_useState4","replyCommentLikeCheck","setReplyCommentLikeCheck","_useQuery","useQuery","queryKey","id","queryFn","get","replyCommentLikeCountInfo","data","isLoading","postCommentLikeCount","length","likeCheck","_useRecoilState","useRecoilState","_useRecoilState2","postReplyCommentConfigModalOpen","setPostReplyCommentConfigModalOpen","post","handlePostLike","likeLoading","_CustomUseMutation2","_callee3","_context3","handlePostUnLike","unLikeLoading","useMemo","index","FakeCommentProfileImg","FakeCommentUserNickname","FakeCommentUserNickname2","User","nickname","content","_Fragment","setTimeout","CommentConfigModalCp","myComment","postCommentConfigModalOpen","setPostCommentConfigModalOpen","_useRecoilState3","_useRecoilState4","replyInputOpen","setReplyInputOpen","stopPropagation","PostId","PostReplyInputWrapper","PostReplyInput","ReplyButtonWrapper","ReplyCancelButton","ReplyInputButton","replyCommentContent","setReplyCommentContent","response","PostCommentId","log","value","onChange","_ref5","userInfo","UserInfoQuery","setPostCommentLikeCount","commentLikeCheck","setCommentLikeCheck","useRecoilValue","_useState5","_useState6","ReplyCommentsOpen","setReplyCommentsOpen","commentLikeInfo","handleCommentLike","handleSubitCommentLike","handleCommentUnlike","handleSubmitCommentUnlike","_callee4","_context4","replyComments","SpinnerWrapper","SpinnerCp","color","size","src","profileImg","PostCommentContactCp","PostReplyCommentInputCp","map","PostReplyComment","postId","commentContent","setCommentContent","getPostComments","readOnly","loginCheck","placeholder","modalOpen","setModalOpen","PostCommentCp","PostCommentInput"],"sourceRoot":""}