{"version":3,"file":"static/js/345.e430c0b0.chunk.js","mappings":"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","sources":["StyledComponents/CommonCpStyle/Comment/CommentConfigModalCpSt.js","Components/Common/Comment/CommentConfigModalCp.js","StyledComponents/PostStyle/PostComment/PostCommentsCpSt.js","StyledComponents/MoreStoryStyle/MoreStoryCommentCpSt.js","StyledComponents/PostStyle/PostCommentCpSt.js","StyledComponents/PostStyle/PostReplyComment/PostReplyCommentCpSt.js","Components/Post/PostReplyComment/PostReplyComment.js","Components/Post/PostComment/PostCommentContactCp.js","StyledComponents/PostStyle/PostReplyComment/PostReplyCommentInputSt.js","Components/Post/PostReplyCommentInput/PostReplyCommentInputCp.js","Components/Post/PostComment/PostCommentCp.js","Components/Post/PostCommentInput/PostCommentInput.js","Components/Post/PostComment/PostCommentsCp.js"],"sourcesContent":["import styled from \"styled-components\";\n//취소\nimport { AiOutlineCloseCircle } from \"react-icons/ai\";\n\n//수정\nimport { AiOutlineEdit } from \"react-icons/ai\";\n\n//휴지통\n\nimport { RiDeleteBinLine } from \"react-icons/ri\";\n\nexport const CommentConfigCloseIcon = styled(AiOutlineCloseCircle)`\n  color: red;\n  margin-right: 3px;\n`;\n\nexport const CommentDeleteIcon = styled(RiDeleteBinLine)`\n  margin-right: 3px;\n`;\n\nexport const CommentEditIcon = styled(AiOutlineEdit)`\n  margin-right: 3px;\n`;\n\nexport const CommentConfigModal = styled.div`\n  position: absolute;\n  right: ${(props) => props.right};\n  left: ${(props) => props.left};\n  bottom: ${(props) => props.bottom};\n  top: ${(props) => props.top};\n  width: 100px;\n  height: 60px;\n  border-radius: 10px;\n  border: none;\n  background-color: white;\n`;\n\nexport const CommentConfigModalOption = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 14px;\n  height: 30px;\n  cursor: pointer;\n`;\n","import React, { useRef, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useRecoilState } from \"recoil\";\n\n//Styled-Component\nimport {\n  CommentConfigModal,\n  CommentConfigModalOption,\n  CommentDeleteIcon,\n  CommentConfigCloseIcon,\n} from \"../../../StyledComponents/CommonCpStyle/Comment/CommentConfigModalCpSt\";\n\n//Atoms\nimport ModalOpenAtom from \"../../../store/ModalOpenAtom\";\n\n//Component\nimport CustomUseMutation from \"../../../customHooks/CustomUseMutation\";\n\nconst CommentConfigModalCp = ({\n  contentType,\n  commentId,\n  commentType,\n  contentId,\n  commentIdOfReplyComment,\n  top,\n  left,\n  right,\n  bottom,\n}) => {\n  const [commentConfigModalOpen, setCommentConfigModalOpen] = useRecoilState(\n    ModalOpenAtom(`${contentType}CommentConfigModal${commentId}`)\n  );\n\n  const deleteComments = async () => {\n    try {\n      const response = await axios.delete(\n        `/delete/${contentType}-comment/${commentId}`\n      );\n      return response;\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const CommentConfigModalRef = useRef(null);\n\n  useEffect(() => {\n    const handleClick = (e) => {\n      console.log(\"CommentConfigModalCp-handleClick\");\n      if (!CommentConfigModalRef.current.contains(e.target)) {\n        setCommentConfigModalOpen(false);\n      }\n    };\n    document.addEventListener(\"click\", handleClick);\n    return () => {\n      document.removeEventListener(\"click\", handleClick);\n    };\n  }, []);\n\n  const queryKeyMadeByCommentTYPE = (() => {\n    if (commentType === \"comment\") return `${contentType}Comments-${contentId}`;\n    if (commentType === \"replyComment\")\n      return `${contentType}ReplyComments-${commentIdOfReplyComment}`;\n  })();\n\n  const { mutate: handleCommentDelete } = CustomUseMutation(\n    deleteComments,\n    queryKeyMadeByCommentTYPE\n  );\n\n  return (\n    <CommentConfigModal\n      ref={CommentConfigModalRef}\n      bottom={bottom}\n      top={top}\n      right={right}\n      left={left}\n    >\n      <CommentConfigModalOption\n        onClick={() => {\n          handleCommentDelete();\n        }}\n      >\n        <CommentDeleteIcon />\n        삭제\n      </CommentConfigModalOption>\n      <CommentConfigModalOption\n        onClick={() => {\n          setCommentConfigModalOpen(false);\n        }}\n      >\n        <CommentConfigCloseIcon />\n        취소\n      </CommentConfigModalOption>\n    </CommentConfigModal>\n  );\n};\n\nexport default CommentConfigModalCp;\n","import styled from \"styled-components\";\nimport { AiOutlineClose } from \"react-icons/ai\";\n\nexport const CommentsWrapper = styled.div`\n  height: 470px;\n  overflow-y: scroll;\n`;\n\nexport const CommentModalWrapper = styled.div`\n  box-shadow: 0px 1px 4px rgba(0, 0, 0, 0.2);\n  background-color: #f8f9fa;\n  border-radius: 0px 10px 10px 0px;\n  z-index: 3;\n  width: 380px;\n  height: 585px;\n  position: absolute;\n  transition: all 0.3s ease-in-out;\n  transform: ${({ click }) =>\n    click ? \"translate3d(300px, 0, 0)\" : \"translate3d(0, 0, 0)\"};\n`;\n\nexport const CommentClosingIcon = styled(AiOutlineClose)`\n  font-size: 25px;\n  font-weight: 100;\n  cursor: pointer;\n`;\n\nexport const CommentOptionWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 0px 10px 0px 10px;\n  height: 50px;\n`;\n\nexport const CommentTitle = styled.div`\n  font-size: 20px;\n  font-weight: 700;\n`;\n\nexport const CommentWrapper = styled.div`\n  width: 100%;\n  min-height: 120px;\n  height: auto;\n  padding: 10px;\n  margin-bottom: 10px;\n`;\n\nexport const CommentInputWrapper = styled.div`\n  padding: 5px 5px 5px 13px;\n  height: 60px;\n  width: 100%;\n  display: flex;\n  align-items: center;\n`;\n\nexport const CommentInput = styled.input`\n  font-size: 15px;\n  background-color: #f8f9fa;\n  height: 40px;\n  width: 80%;\n  resize: none;\n  outline: none;\n  border: none;\n  border-bottom: 2px solid black;\n`;\n\nexport const CommentPostButton = styled.button`\n  width: 20%;\n  height: 40px;\n  border-bottom: 2px solid black;\n  color: ${(props) => (props.comment ? \"black\" : \"#c7c7c8\")};\n`;\n","import styled from \"styled-components\";\n\nimport { LuSmilePlus } from \"react-icons/lu\";\nimport { HiMiniCheckBadge } from \"react-icons/hi2\";\nimport { GiWolfHowl } from \"react-icons/gi\";\nimport { BiPencil } from \"react-icons/bi\";\nimport { PiDotsThreeVerticalBold } from \"react-icons/pi\";\nexport const MoreStoryCommentWrapper = styled.div`\n  width: 100%;\n  height: auto;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n  background-color: #f8f9fa;\n`;\n\nexport const MoreStoryCommentContentsWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 700px;\n  height: auto;\n  margin-top: 50px;\n`;\n\nexport const MoreStoryCommentTitle = styled.div`\n  width: 100%;\n  font-size: 20px;\n  font-weight: 500;\n  border: none;\n  margin-bottom: 20px;\n`;\nexport const MoreStoryCommnetInputWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  padding: 10px;\n  width: 100%;\n  height: 55px;\n  font-size: 20px;\n  border: none;\n  border-radius: 8px;\n  background-color: #e8e8e8;\n`;\n\nexport const MoreStoryCommentInputIcon = styled(BiPencil)`\n  font-size: 25px;\n  margin-right: 20px;\n`;\nexport const MoreStoryCommentInput = styled.textarea`\n  width: 600px;\n  height: 30px;\n  font-size: 20px;\n  vertical-align: center;\n  outline: none;\n  border: none;\n  resize: none;\n  border-radius: 8px;\n  background-color: #e8e8e8;\n`;\n\nexport const StoryCommentPostButton = styled.div`\n  font-size: 15px;\n  color: ${(props) => (props.comment ? \"black\" : \"#c7c7c8\")};\n  cursor: pointer;\n`;\n\nexport const MoreStoryComment = styled.div`\n  display: flex;\n  width: 100%;\n  min-height: 120px;\n  height: auto;\n  padding: 25px 0px 10px 15px;\n  border-bottom: 0.5px solid black;\n`;\n\nexport const ProfileWrapper = styled.div`\n  width: 50px;\n  height: 50px;\n  margin-right: 10px;\n`;\nexport const MoreStoryCommentProfile = styled.div`\n  width: 40px;\n  height: 40px;\n  border-radius: 50%;\n  background-color: black;\n  margin-right: 20px;\n`;\n\nexport const CommentWrapper = styled.div`\n  width: 100%;\n`;\n\nexport const ProfileInfoWrapper = styled.div`\n  display: flex;\n`;\n\nexport const ProfileNameWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  position: relative;\n`;\n\nexport const ProfileName = styled.div`\n  font-size: 15px;\n  font-weight: 700;\n  margin-bottom: 10px;\n  margin-right: 6px;\n`;\n\nexport const CommentMoreIcon = styled(PiDotsThreeVerticalBold)`\n  font-size: 30px;\n  color: gray;\n  &:hover {\n    color: black;\n  }\n  cursor: pointer;\n`;\nexport const CommentContent = styled.div`\n  height: auto;\n  line-height: 1.5;\n`;\n\nexport const CommentContact = styled.div`\n  display: flex;\n  align-items: center;\n  margin-top: 20px;\n  margin-bottom: 10px;\n`;\n\nexport const CommentContactIcon = styled(LuSmilePlus)`\n  margin-right: 20px;\n  font-size: 25px;\n  cursor: pointer;\n`;\n\nexport const CommentContactReply = styled.div`\n  cursor: pointer;\n`;\n\nexport const CommentSpace = styled.div`\n  width: 100%;\n  height: 100px;\n`;\n\nexport const OfficialBadgeIcon = styled(HiMiniCheckBadge)`\n  color: #f7dd07;\n`;\n\nexport const WolfIcon = styled(GiWolfHowl)`\n  font-size: 46px;\n  color: #f7dd07;\n  border-radius: 50%;\n  border: 1px solid white;\n  background-color: black;\n`;\n","import styled from \"styled-components\";\nimport { CommentWrapper } from \"../MoreStoryStyle/MoreStoryCommentCpSt\";\n\n//icons\nimport { AiFillHeart } from \"react-icons/ai\";\nimport { AiOutlineHeart } from \"react-icons/ai\";\nimport { BiSolidDownArrow } from \"react-icons/bi\";\nimport { BsThreeDots } from \"react-icons/bs\";\n//취소\nimport { AiOutlineCloseCircle } from \"react-icons/ai\";\n//휴지통\nimport { RiDeleteBinLine } from \"react-icons/ri\";\n\nexport const MoreReplyButtonIcon = styled(BiSolidDownArrow)`\n  margin-right: 5px;\n`;\nexport const MoreReplyButtonWrapper = styled.div`\n  display: flex;\n  ${MoreReplyButtonIcon} {\n    transform: ${(props) =>\n      props.moreReplyOpen ? \"rotate(180deg)\" : \"rotate(0deg)\"};\n  }\n  color: #236bd8;\n  margin-top: 7px;\n  margin-bottom: 7px;\n  &:hover {\n    border-radius: 15px;\n    background-color: #c5d5f5;\n  }\n  width: 70px;\n  padding: 5px 10px;\n  cursor: pointer;\n`;\n\nexport const MoreReplyTitle = styled.div``;\n\nexport const CommentWrapper2 = styled(CommentWrapper)`\n  margin: 10px;\n  width: 360px;\n`;\n\nexport const CommentLikeIcon = styled(AiOutlineHeart)`\n  cursor: pointer;\n`;\n\nexport const CommentLikeFillIcon = styled(AiFillHeart)`\n  cursor: pointer;\n  color: #f7dd07;\n`;\n\nexport const CommentProfileWrapper = styled.div`\n  display: flex;\n  height: auto;\n`;\n\nexport const CommentProfileImg = styled.img`\n  width: 40px;\n  height: 40px;\n  border-radius: 50%;\n  background-color: black;\n  margin-right: 15px;\n  object-fit: cover;\n`;\n\nexport const CommentProfileInfo = styled.div`\n  width: 300px;\n  height: auto;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const CommentUserNicknameWrapper = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n`;\n\nexport const CommentUserNickname = styled.div`\n  font-size: 13px;\n  margin-bottom: 5px;\n`;\n\nexport const CommentContent = styled.div`\n  min-height: 30px;\n  height: auto;\n  margin-bottom: 10px;\n`;\n\nexport const LikeButtonWrapper = styled.div`\n  display: flex;\n  width: 20px;\n`;\n\nexport const CommentContactWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 15px;\n  position: relative;\n`;\n\nexport const CommentContactDiv = styled.div`\n  display: flex;\n`;\n\nexport const CommentLikeCount = styled.div`\n  font-size: 13px;\n  margin-right: 15px;\n`;\n\nexport const CommentConfigIcon = styled(BsThreeDots)`\n  cursor: pointer;\n`;\n\nexport const CommentConfigCloseIcon = styled(AiOutlineCloseCircle)`\n  color: red;\n  margin-right: 3px;\n`;\n\nexport const CommentDeleteIcon = styled(RiDeleteBinLine)`\n  margin-right: 3px;\n`;\n\nexport const CommentConfigModal = styled.div`\n  position: absolute;\n  bottom: -10px;\n  right: -10px;\n  width: 100px;\n  height: 90px;\n  border-radius: 10px;\n  border: none;\n  background-color: white;\n`;\n\nexport const CommentConfigModalOption = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 14px;\n  height: 30px;\n  cursor: pointer;\n`;\n\nexport const CommentReplyButtom = styled.button`\n  font-size: 13px;\n`;\n","import styled from \"styled-components\";\n\nimport { AiFillHeart } from \"react-icons/ai\";\nimport { AiOutlineHeart } from \"react-icons/ai\";\nimport { BsThreeDots } from \"react-icons/bs\";\nimport { CommentWrapper } from \"../../MoreStoryStyle/MoreStoryCommentCpSt\";\n\nexport const CommentConfigIcon = styled(BsThreeDots)`\n  cursor: pointer;\n`;\n\n//---\nexport const CommentWrapper2 = styled(CommentWrapper)`\n  margin-top: 10px;\n`;\n\nexport const CommentLikeIcon = styled(AiOutlineHeart)``;\n\nexport const CommentLikeFillIcon = styled(AiFillHeart)`\n  color: #f7dd07;\n`;\n\nexport const CommentProfileWrapper = styled.div`\n  display: flex;\n  height: auto;\n`;\n\nexport const CommentProfileImg = styled.img`\n  width: 40px;\n  height: 40px;\n  border-radius: 50%;\n  background-color: black;\n  margin-right: 15px;\n`;\n\nexport const CommentProfileInfo = styled.div`\n  width: 250px;\n  height: auto;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const CommentUserNicknameWrapper = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n`;\n\nexport const CommentUserNickname = styled.div`\n  font-size: 13px;\n  margin-bottom: 5px;\n`;\n\nexport const CommentContent = styled.div`\n  min-height: 20px;\n  height: auto;\n  margin-bottom: 10px;\n  margin-top: 5px;\n`;\n\nexport const LikeButtonWrapper = styled.div`\n  display: flex;\n  width: 20px;\n`;\n\nexport const CommentContactWrapper = styled.div`\n  display: flex;\n  margin-bottom: 15px;\n  position: relative;\n`;\n\nexport const CommentLikeCount = styled.div`\n  font-size: 13px;\n  margin-right: 15px;\n`;\n\nexport const CommentReplyButtom = styled.button`\n  font-size: 13px;\n`;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useRecoilState } from \"recoil\";\nimport styled from \"styled-components\";\n\n//Styled-Components\nimport {\n  CommentWrapper2,\n  CommentProfileWrapper,\n  CommentProfileImg,\n  CommentProfileInfo,\n  CommentUserNicknameWrapper,\n  CommentUserNickname,\n  LikeButtonWrapper,\n  CommentLikeFillIcon,\n  CommentLikeIcon,\n  CommentContent,\n  CommentContactWrapper,\n  CommentLikeCount,\n  CommentConfigIcon,\n} from \"../../../StyledComponents/PostStyle/PostReplyComment/PostReplyCommentCpSt\";\n\n//component\nimport CommentConfigModalCp from \"../../Common/Comment/CommentConfigModalCp\";\n\n//atoms\nimport ModalOpenAtom from \"../../../store/ModalOpenAtom\";\nimport { useQuery } from \"@tanstack/react-query\";\n\n//useMutation hook\nimport CustomUseMutation from \"../../../customHooks/CustomUseMutation\";\n\nconst PostReplyComment = ({ replyComment, commentId }) => {\n  const [replyCommentLikeCount, setReplyCommentLikeCount] = useState(0);\n  const [replyCommentLikeCheck, setReplyCommentLikeCheck] = useState(false);\n\n  const fetchPostReplyCommentLikeInfo = async () => {\n    try {\n      //postCommentLikeInfo Update\n      return await axios.get(`\n        /page/render-only-postcomment-likeinfo/${replyComment.id}\n        `);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const { data: replyCommentLikeCountInfo, isLoading } = useQuery({\n    queryKey: [`replyComments-${replyComment.id}`],\n    queryFn: fetchPostReplyCommentLikeInfo,\n  });\n\n  useEffect(() => {\n    setReplyCommentLikeCount(\n      replyCommentLikeCountInfo?.data.postCommentLikeCount.length\n    );\n    setReplyCommentLikeCheck(replyCommentLikeCountInfo?.data.likeCheck);\n  }, [replyCommentLikeCountInfo?.data]);\n\n  const [postReplyCommentConfigModalOpen, setPostReplyCommentConfigModalOpen] =\n    useRecoilState(ModalOpenAtom(`postCommentConfigModal${replyComment.id}`));\n\n  //댓글 좋아요를 눌렀는지 확인해주는 함수\n\n  const postLike = async () => {\n    try {\n      return await axios.post(`/comment/post/like/${replyComment.id}`);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const postUnLike = async () => {\n    try {\n      return await axios.post(`/comment/post/unlike/${replyComment.id}`);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const { mutate: handlePostLike, isLoading: likeLoading } = CustomUseMutation(\n    postLike,\n    `postReplyComments-${commentId}`\n  );\n\n  const { mutate: handlePostUnLike, isLoading: unLikeLoading } =\n    CustomUseMutation(postUnLike, `postReplyComments-${commentId}`);\n\n  const handleLike = () => {\n    setReplyCommentLikeCount((prev) => prev + 1);\n    setReplyCommentLikeCheck(true);\n    handlePostLike();\n  };\n  const handleUnLike = () => {\n    setReplyCommentLikeCount((prev) => prev - 1);\n    setReplyCommentLikeCheck(false);\n    handlePostUnLike();\n  };\n\n  if (isLoading || likeLoading || unLikeLoading) {\n    return (\n      <CommentWrapper2 index={1}>\n        <CommentProfileWrapper>\n          <FakeCommentProfileImg />\n          <CommentProfileInfo>\n            <CommentUserNicknameWrapper>\n              <FakeCommentUserNickname />\n            </CommentUserNicknameWrapper>\n            <CommentContent>\n              <FakeCommentUserNickname2 />\n            </CommentContent>\n            <CommentContactWrapper>\n              <FakeCommentUserNickname />\n            </CommentContactWrapper>\n          </CommentProfileInfo>\n        </CommentProfileWrapper>\n      </CommentWrapper2>\n    );\n  }\n\n  return (\n    <CommentWrapper2 index={1}>\n      <CommentProfileWrapper>\n        <CommentProfileImg />\n        <CommentProfileInfo>\n          <CommentUserNicknameWrapper>\n            <CommentUserNickname>\n              {replyComment.User.nickname}\n            </CommentUserNickname>\n            <LikeButtonWrapper>\n              {replyCommentLikeCheck ? (\n                <CommentLikeFillIcon\n                  onClick={() => {\n                    handleUnLike();\n                  }}\n                />\n              ) : (\n                <CommentLikeIcon\n                  onClick={() => {\n                    handleLike();\n                  }}\n                />\n              )}\n            </LikeButtonWrapper>\n          </CommentUserNicknameWrapper>\n          <CommentContent>{replyComment.content}</CommentContent>\n          <CommentContactWrapper>\n            <CommentLikeCount>좋아요 {replyCommentLikeCount}</CommentLikeCount>\n            <>\n              <CommentConfigIcon\n                onClick={() => {\n                  setTimeout(() => {\n                    setPostReplyCommentConfigModalOpen(true);\n                  }, 0);\n                }}\n              />\n              {postReplyCommentConfigModalOpen && (\n                <CommentConfigModalCp\n                  contentType={\"post\"}\n                  commentId={replyComment.id}\n                  commentIdOfReplyComment={commentId}\n                  commentType={\"replyComment\"}\n                  bottom={\"-10px\"}\n                  right={\"-10px\"}\n                />\n              )}\n            </>\n          </CommentContactWrapper>\n        </CommentProfileInfo>\n      </CommentProfileWrapper>\n    </CommentWrapper2>\n  );\n};\n\nexport default PostReplyComment;\n\nexport const FakeCommentProfileImg = styled.img`\n  width: 40px;\n  height: 40px;\n  border-radius: 50%;\n  background-color: gray;\n  opacity: 0.4;\n  margin-right: 15px;\n`;\n\nexport const FakeCommentUserNickname = styled.div`\n  font-size: 13px;\n  margin-bottom: 5px;\n  background-color: gray;\n  opacity: 0.4;\n  width: 87px;\n  height: 15px;\n`;\n\nexport const FakeCommentUserNickname2 = styled.div`\n  font-size: 13px;\n  background-color: gray;\n  opacity: 0.4;\n  width: 77px;\n  height: 15px;\n`;\n","import React from \"react\";\nimport { useRecoilState } from \"recoil\";\n\n//Styled-Components\nimport {\n  CommentContactWrapper,\n  CommentContactDiv,\n  CommentLikeCount,\n  CommentReplyButtom,\n  CommentConfigIcon,\n} from \"../../../StyledComponents/PostStyle/PostCommentCpSt\";\n\n//Component\nimport CommentConfigModalCp from \"../../Common/Comment/CommentConfigModalCp\";\n\n//Atom\nimport ModalOpenAtom from \"../../../store/ModalOpenAtom\";\n\nconst PostCommentContactCp = ({ postCommentLikeCount, myComment, comment }) => {\n  const [postCommentConfigModalOpen, setPostCommentConfigModalOpen] =\n    useRecoilState(ModalOpenAtom(`postCommentConfigModal${comment.id}`));\n\n  const [replyInputOpen, setReplyInputOpen] = useRecoilState(\n    ModalOpenAtom(`replyComment${comment.id}`)\n  );\n\n  return (\n    <CommentContactWrapper>\n      <CommentContactDiv>\n        <CommentLikeCount>좋아요 {postCommentLikeCount}</CommentLikeCount>\n        <CommentReplyButtom onClick={() => setReplyInputOpen(!replyInputOpen)}>\n          답글 달기\n        </CommentReplyButtom>\n      </CommentContactDiv>\n\n      {myComment && (\n        <>\n          <CommentConfigIcon\n            onClick={(e) => {\n              e.stopPropagation();\n              setPostCommentConfigModalOpen(true);\n            }}\n          />\n          {postCommentConfigModalOpen && (\n            <CommentConfigModalCp\n              contentType={\"post\"}\n              commentId={comment.id}\n              commentType={\"comment\"}\n              contentId={comment.PostId}\n              bottom={\"-10px\"}\n              right={\"-10px\"}\n            />\n          )}\n        </>\n      )}\n    </CommentContactWrapper>\n  );\n};\n\nexport default PostCommentContactCp;\n","import styled from \"styled-components\";\n\nexport const PostReplyInputWrapper = styled.div`\n  border-bottom: 1px solid black;\n  display: flex;\n`;\n\nexport const PostReplyInput = styled.input`\n  width: 80%;\n  border: none;\n  background-color: #f8f9fa;\n  margin-top: 10px;\n  margin-bottom: 5px;\n  font-size: 15px;\n`;\n\nexport const ReplyButtonWrapper = styled.div`\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n  width: 80px;\n`;\nexport const ReplyCancelButton = styled.div`\n  font-size: 13px;\n  cursor: pointer;\n  color: gray;\n  $:hover {\n    color: black;\n  }\n`;\n\nexport const ReplyInputButton = styled.div`\n  font-size: 13px;\n  cursor: pointer;\n  color: gray;\n  $:hover {\n    color: black;\n  }\n`;\n","import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { useSetRecoilState } from \"recoil\";\n\n//Styled-Components\nimport {\n  PostReplyInputWrapper,\n  PostReplyInput,\n  ReplyButtonWrapper,\n  ReplyCancelButton,\n  ReplyInputButton,\n} from \"../../../StyledComponents/PostStyle/PostReplyComment/PostReplyCommentInputSt\";\n\n//Atoms\nimport ModalOpenAtom from \"../../../store/ModalOpenAtom\";\n\n//Component\nimport CustomUseMutation from \"../../../customHooks/CustomUseMutation\";\n\nconst PostReplyCommentInputCp = ({ comment }) => {\n  const [replyCommentContent, setReplyCommentContent] = useState(\"\");\n  const setReplyInputOpen = useSetRecoilState(\n    ModalOpenAtom(`replyComment${comment.id}`)\n  );\n\n  const createPostComment = async () => {\n    try {\n      const response = await axios.post(\"/comment/post\", {\n        content: replyCommentContent,\n        PostId: comment.PostId,\n        PostCommentId: comment.id,\n      });\n      return response;\n    } catch (error) {\n      console.log(`PostReplyComments Error ${error}`);\n    }\n  };\n\n  const { mutate } = CustomUseMutation(\n    createPostComment,\n    `postReplyComments-${comment.id}`,\n    function callback() {\n      setReplyCommentContent(\"\");\n    }\n  );\n\n  return (\n    <PostReplyInputWrapper>\n      <PostReplyInput\n        value={replyCommentContent}\n        onChange={(e) => {\n          setReplyCommentContent(e.target.value);\n        }}\n      />\n      <ReplyButtonWrapper>\n        <ReplyCancelButton onClick={() => setReplyInputOpen(false)}>\n          취소\n        </ReplyCancelButton>\n        <ReplyInputButton\n          onClick={() => {\n            mutate();\n          }}\n        >\n          게시\n        </ReplyInputButton>\n      </ReplyButtonWrapper>\n    </PostReplyInputWrapper>\n  );\n};\n\nexport default PostReplyCommentInputCp;\n","import { useEffect, useState } from \"react\";\nimport { useRecoilValue } from \"recoil\";\nimport axios from \"axios\";\nimport styled from \"styled-components\";\nimport { useQuery } from \"@tanstack/react-query\";\n\n//Styled-Components\nimport {\n  CommentWrapper2,\n  CommentProfileWrapper,\n  CommentProfileImg,\n  CommentProfileInfo,\n  CommentUserNicknameWrapper,\n  CommentUserNickname,\n  LikeButtonWrapper,\n  CommentLikeFillIcon,\n  CommentLikeIcon,\n  CommentContent,\n  MoreReplyButtonWrapper,\n  MoreReplyButtonIcon,\n  MoreReplyTitle,\n} from \"../../../StyledComponents/PostStyle/PostCommentCpSt\";\n\n//Component\nimport PostReplyComment from \"../PostReplyComment/PostReplyComment\";\nimport SpinnerCp from \"../../Common/Spinner/SpinnerCp\";\nimport PostCommentContactCp from \"./PostCommentContactCp\";\nimport PostReplyCommentInputCp from \"../PostReplyCommentInput/PostReplyCommentInputCp\";\n\n//atoms\nimport ModalOpenAtom from \"../../../store/ModalOpenAtom\";\n\nconst PostCommentCp = ({ comment, myComment }) => {\n  //댓글 좋아요 상태\n  const [postCommentLikeCount, setPostCommentLikeCount] = useState(0);\n  const [commentLikeCheck, setCommentLikeCheck] = useState(false);\n\n  //대댓글 상태\n  const replyInputOpen = useRecoilValue(\n    ModalOpenAtom(`replyComment${comment.id}`)\n  );\n  const [ReplyCommentsOpen, setReplyCommentsOpen] = useState(false);\n\n  //좋아요 버튼 함수\n  const handleSubitCommentLike = async () => {\n    try {\n      await axios.post(`/comment/post/like/${comment.id}`);\n    } catch (error) {\n      console.error(error, \"handleSubmitCommentLike - Error\");\n    }\n  };\n  //좋아요 버튼 취소 함수\n  const handleSubmitCommentUnlike = async () => {\n    try {\n      await axios.post(`/comment/post/unlike/${comment.id}`);\n    } catch (error) {\n      console.error(error, \"handleSubmitCommentUnlike - Error\");\n    }\n  };\n\n  //댓글 좋아요 정보를 불러오는 함수 (api 폴더에서 따로 관리 할 예정)\n  const getPostCommentsInfo = async () => {\n    try {\n      const response = await axios.get(`\n      /page/render-only-postcomment-likeinfo/${comment.id}\n      `);\n      return response;\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  //댓글의 좋아요 정보를 불러옴\n  const commentLikeInfo = useQuery({\n    queryKey: [`postCommentLikeInfo${comment.id}`],\n    queryFn: getPostCommentsInfo,\n  });\n\n  //좋아요를 누르면 실행되는 함수\n  const handleCommentLike = () => {\n    setCommentLikeCheck(true);\n    setPostCommentLikeCount((prev) => prev + 1);\n    handleSubitCommentLike();\n  };\n\n  //좋아요 취소를 누르면 실행되는 함수\n  const handleCommentUnlike = () => {\n    setCommentLikeCheck(false);\n    setPostCommentLikeCount((prev) => prev - 1);\n    handleSubmitCommentUnlike();\n  };\n\n  useEffect(() => {\n    if (commentLikeInfo.data) {\n      setPostCommentLikeCount(\n        commentLikeInfo.data.data.postCommentLikeCount.length\n      );\n      setCommentLikeCheck(commentLikeInfo.data.data.likeCheck);\n    }\n  }, [commentLikeInfo.data]);\n\n  const getPostReplyComments = async () => {\n    try {\n      const response = await axios.get(\n        `/page/render-post-replycomment/${comment.id}`\n      );\n      return response;\n    } catch (error) {\n      console.error(error, \"getRostReplyComment - Error\");\n    }\n  };\n\n  //replyComments\n  const { data: replyComments, isLoading } = useQuery({\n    queryKey: [`postReplyComments-${comment.id}`],\n    queryFn: getPostReplyComments,\n  });\n\n  if (isLoading) {\n    return (\n      <SpinnerWrapper>\n        <SpinnerCp color=\"blue\" size=\"30px\" />\n      </SpinnerWrapper>\n    );\n  }\n\n  return (\n    <CommentWrapper2>\n      <CommentProfileWrapper>\n        <CommentProfileImg src={comment.User.profileImg} />\n        <CommentProfileInfo>\n          <CommentUserNicknameWrapper>\n            <CommentUserNickname>{comment.User.nickname}</CommentUserNickname>\n            <LikeButtonWrapper>\n              {commentLikeCheck ? (\n                <CommentLikeFillIcon\n                  onClick={() => {\n                    handleCommentUnlike();\n                  }}\n                />\n              ) : (\n                <CommentLikeIcon\n                  onClick={() => {\n                    handleCommentLike();\n                  }}\n                />\n              )}\n            </LikeButtonWrapper>\n          </CommentUserNicknameWrapper>\n          <CommentContent>{comment.content}</CommentContent>\n          <PostCommentContactCp\n            myComment={myComment}\n            comment={comment}\n            postCommentLikeCount={postCommentLikeCount}\n          />\n          {replyInputOpen && <PostReplyCommentInputCp comment={comment} />}\n          {replyComments?.data.length >= 1 && (\n            <MoreReplyButtonWrapper\n              onClick={() => setReplyCommentsOpen(!ReplyCommentsOpen)}\n            >\n              <MoreReplyButtonIcon moreReplyOpen={ReplyCommentsOpen} />\n              <MoreReplyTitle>댓글</MoreReplyTitle>\n            </MoreReplyButtonWrapper>\n          )}\n          {ReplyCommentsOpen && (\n            <>\n              {replyComments.data.map((replyComment) => (\n                <PostReplyComment\n                  replyComment={replyComment}\n                  commentId={comment.id}\n                />\n              ))}\n            </>\n          )}\n        </CommentProfileInfo>\n      </CommentProfileWrapper>\n    </CommentWrapper2>\n  );\n};\n\nexport default PostCommentCp;\n\nconst SpinnerWrapper = styled.div`\n  width: 100%;\n  height: 90px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n","import React, { useState } from \"react\";\nimport axios from \"axios\";\n\n//Styled-Components\nimport {\n  CommentInputWrapper,\n  CommentInput,\n  CommentPostButton,\n} from \"../../../StyledComponents/PostStyle/PostComment/PostCommentsCpSt\";\n\n//Component\nimport CustomUseMutation from \"../../../customHooks/CustomUseMutation\";\n\nconst PostCommentInput = ({ postId }) => {\n  const [commentContent, setCommentContent] = useState(\"\");\n\n  const fetchPostComments = async () => {\n    await axios.post(\"/comment/post\", {\n      content: commentContent,\n      PostId: postId,\n    });\n  };\n\n  const { mutate: getPostComments } = CustomUseMutation(\n    fetchPostComments,\n    `postComments-${postId}`,\n    () => {\n      setCommentContent(\"\");\n    }\n  );\n\n  return (\n    <CommentInputWrapper>\n      <CommentInput\n        value={commentContent}\n        onChange={(e) => setCommentContent(e.target.value)}\n      />\n      <CommentPostButton\n        comment={commentContent}\n        onClick={() => {\n          getPostComments();\n        }}\n      >\n        게시\n      </CommentPostButton>\n    </CommentInputWrapper>\n  );\n};\n\nexport default PostCommentInput;\n","import React from \"react\";\nimport axios from \"axios\";\nimport { useRecoilState } from \"recoil\";\nimport { useQuery } from \"@tanstack/react-query\";\n\n//Styled-Component\nimport {\n  CommentClosingIcon,\n  CommentModalWrapper,\n  CommentOptionWrapper,\n  CommentTitle,\n  CommentsWrapper,\n} from \"../../../StyledComponents/PostStyle/PostComment/PostCommentsCpSt\";\n\n//Component\nimport PostCommentCp from \"./PostCommentCp\";\nimport PostCommentInput from \"../PostCommentInput/PostCommentInput\";\n\n//Atoms\nimport ModalOpenAtom from \"../../../store/ModalOpenAtom\";\n\n//Context\nimport { useUserInfoValue } from \"../../../contextApi/UserInfoProvider\";\n\nconst CommentModalCp = ({ postId }) => {\n  const userInfo = useUserInfoValue();\n\n  const [modalOpen, setModalOpen] = useRecoilState(\n    ModalOpenAtom(`commentModalOpen${postId}`)\n  );\n  const handleClick = () => {\n    setModalOpen(false);\n  };\n\n  const getPostComments = async () => {\n    try {\n      const response = await axios.get(`/page/render-post-comment/${postId}`);\n      return response;\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const { data } = useQuery({\n    queryKey: [`postComments-${postId}`],\n    queryFn: getPostComments,\n  });\n\n  return (\n    <>\n      <CommentModalWrapper click={modalOpen}>\n        <CommentOptionWrapper>\n          <CommentTitle>댓글</CommentTitle>\n          <CommentClosingIcon onClick={handleClick}>X</CommentClosingIcon>\n        </CommentOptionWrapper>\n        <CommentsWrapper>\n          {data?.data.map((comment) => (\n            <>\n              {comment.UserId === userInfo.id ? (\n                <PostCommentCp comment={comment} myComment={true} />\n              ) : (\n                <PostCommentCp comment={comment} />\n              )}\n            </>\n          ))}\n        </CommentsWrapper>\n        <PostCommentInput postId={postId} />\n      </CommentModalWrapper>\n    </>\n  );\n};\n\nexport default CommentModalCp;\n"],"names":["CommentConfigCloseIcon","styled","AiOutlineCloseCircle","_templateObject","_taggedTemplateLiteral","CommentDeleteIcon","RiDeleteBinLine","_templateObject2","CommentConfigModal","AiOutlineEdit","_templateObject3","div","_templateObject4","props","right","left","bottom","top","CommentConfigModalOption","_templateObject5","_ref","_ref2","contentType","commentId","commentType","contentId","commentIdOfReplyComment","_useRecoilState","useRecoilState","ModalOpenAtom","concat","_useRecoilState2","_slicedToArray","setCommentConfigModalOpen","CommentConfigModalRef","useRef","useEffect","handleClick","e","console","log","current","contains","target","document","addEventListener","removeEventListener","queryKeyMadeByCommentTYPE","_CustomUseMutation","CustomUseMutation","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","wrap","_context","prev","next","axios","delete","sent","abrupt","t0","error","stop","apply","arguments","handleCommentDelete","mutate","_jsxs","ref","children","onClick","_jsx","CommentsWrapper","CommentModalWrapper","click","CommentClosingIcon","AiOutlineClose","CommentOptionWrapper","CommentTitle","CommentInputWrapper","_templateObject6","_templateObject7","CommentInput","input","_templateObject8","CommentPostButton","button","_templateObject9","comment","CommentWrapper","BiPencil","textarea","_templateObject10","_templateObject11","_templateObject12","_templateObject13","_templateObject14","PiDotsThreeVerticalBold","_templateObject15","_templateObject16","_templateObject17","LuSmilePlus","_templateObject18","_templateObject19","_templateObject20","HiMiniCheckBadge","_templateObject21","GiWolfHowl","_templateObject22","MoreReplyButtonIcon","BiSolidDownArrow","MoreReplyButtonWrapper","moreReplyOpen","MoreReplyTitle","CommentWrapper2","CommentLikeIcon","AiOutlineHeart","CommentLikeFillIcon","AiFillHeart","CommentProfileWrapper","CommentProfileImg","img","CommentProfileInfo","CommentUserNicknameWrapper","CommentUserNickname","CommentContent","LikeButtonWrapper","CommentContactWrapper","CommentContactDiv","CommentLikeCount","CommentConfigIcon","BsThreeDots","CommentReplyButtom","_ref3","_ref4","replyComment","_useState","useState","_useState2","replyCommentLikeCount","setReplyCommentLikeCount","_useState3","_useState4","replyCommentLikeCheck","setReplyCommentLikeCheck","_useQuery","useQuery","queryKey","id","queryFn","get","replyCommentLikeCountInfo","data","isLoading","postCommentLikeCount","length","likeCheck","postReplyCommentConfigModalOpen","setPostReplyCommentConfigModalOpen","_callee2","_context2","post","handlePostLike","likeLoading","_CustomUseMutation2","_callee3","_context3","handlePostUnLike","unLikeLoading","index","FakeCommentProfileImg","FakeCommentUserNickname","FakeCommentUserNickname2","User","nickname","content","_Fragment","setTimeout","CommentConfigModalCp","myComment","postCommentConfigModalOpen","setPostCommentConfigModalOpen","_useRecoilState3","_useRecoilState4","replyInputOpen","setReplyInputOpen","stopPropagation","PostId","PostReplyInputWrapper","PostReplyInput","ReplyButtonWrapper","ReplyCancelButton","ReplyInputButton","replyCommentContent","setReplyCommentContent","useSetRecoilState","PostCommentId","value","onChange","_ref5","setPostCommentLikeCount","commentLikeCheck","setCommentLikeCheck","useRecoilValue","_useState5","_useState6","ReplyCommentsOpen","setReplyCommentsOpen","commentLikeInfo","handleCommentLike","handleSubitCommentLike","handleCommentUnlike","handleSubmitCommentUnlike","_callee4","_context4","replyComments","SpinnerWrapper","SpinnerCp","color","size","src","profileImg","PostCommentContactCp","PostReplyCommentInputCp","map","PostReplyComment","postId","commentContent","setCommentContent","getPostComments","userInfo","useUserInfoValue","modalOpen","setModalOpen","UserId","PostCommentCp","PostCommentInput"],"sourceRoot":""}