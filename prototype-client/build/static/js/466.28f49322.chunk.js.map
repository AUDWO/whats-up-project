{"version":3,"file":"static/js/466.28f49322.chunk.js","mappings":"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","sources":["StyledComponents/ProfileStyle/ProfileConfigModalCpSt.js","StyledComponents/ProfileStyle/ProfileConfig/ProfileConfigCommonSt.js","StyledComponents/ProfileStyle/ProfileConfig/ProfileInfoSettingOptionCpSt.js","Components/Profile/ProfileConfigOptions/ProfileInfoSettingOptionCp.js","StyledComponents/ProfileStyle/ProfileConfig/ProfileInfoOptionCpSt.js","Components/Profile/ProfileConfigOptions/ProfileInfoOptionCp.js","Components/Profile/ProfileConfigOptions/ProfilePasswordOptionCp.js","Components/Profile/ProfileConfigModal.js"],"sourcesContent":["import styled from \"styled-components\";\n\nimport { MdOutlineKeyboardArrowDown } from \"react-icons/md\";\nimport { MdOutlineKeyboardArrowUp } from \"react-icons/md\";\n\nlet marginDirection = {\n  marginL: \"margin-left\",\n  marginR: \"margin-right\",\n  marginB: \"margin-bottom\",\n  marginT: \"margin-top\",\n};\n\nlet paddingDirection = {\n  paddingT: \"padding-top\",\n  paddingL: \"padding-left\",\n  paddingB: \"padding-bottom\",\n  paddingR: \"padding-right\",\n};\n\nlet paddingDynamic = (props) => {\n  let paddingValue = ``;\n\n  for (const key in props) {\n    if (paddingDirection[key]) {\n      paddingValue += `\n          ${paddingDirection[key]} : ${props[key]}px\n          `;\n    }\n  }\n\n  return paddingValue;\n};\n\nlet marginDynamic = (props) => {\n  let marginValue = ``;\n\n  for (const key in props) {\n    if (marginDirection[key]) {\n      marginValue += `\n          ${marginDirection[key]} : ${props[key]}px\n          `;\n    }\n  }\n\n  return marginValue;\n};\n\nexport const ProfileConfigModalWrapper = styled.div`\n    position:fixed;\n    z-index: 17;\n    width: 100%;\n    height: 100%;\n    background-color: rgba(0, 0, 0, 0.5);\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  }\n  \n  `;\n\nexport const ProfileConfigWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  position: absolute;\n  z-index: 20;\n  width: 500px;\n  height: auto;\n  background-color: white;\n  border-radius: 10px;\n  opacity: 1;\n`;\n\nexport const ProfileConfigListItem = styled.div`\n  width: 100%;\n  height: auto;\n  border: 0.5px solid gray;\n  color: gray;\n  align-items: center;\n  padding: 10px;\n`;\n\nexport const ConfigTitle = styled.div`\n  display: flex;\n  align-items: center;\n  height: 60px;\n`;\n\nexport const ConfigTitleWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nexport const OpenIcon = styled(MdOutlineKeyboardArrowDown)`\n  font-size: 30px;\n  cursor: pointer;\n`;\n\nexport const CloseIcon = styled(MdOutlineKeyboardArrowUp)`\n  font-size: 30px;\n  cursor: pointer;\n`;\n","import styled from \"styled-components\";\n\nlet marginDirection = {\n  marginL: \"margin-left\",\n  marginR: \"margin-right\",\n  marginB: \"margin-bottom\",\n  marginT: \"margin-top\",\n};\n\nlet marginDynamic = (props) => {\n  let marginValue = ``;\n\n  for (const key in props) {\n    if (marginDirection[key]) {\n      marginValue += `\n              ${marginDirection[key]} : ${props[key]}px\n              `;\n    }\n  }\n\n  return marginValue;\n};\n\nexport const ConfigWrapper = styled.div`\n  width: 100%;\n  height: auto;\n  margin-top: 10px;\n\n  border-top: 0.5px solid gray;\n`;\n\nexport const ConfigOptionWrapper = styled.div`\n  height: ${(props) => (props.height ? props.height : \"\")};\n  padding:10px;\n   0px;\n  ${(props) => marginDynamic(props)};\n  display:flex;\n  flex-direction:${(props) => (props.flexD ? props.flexD : \"\")};\n`;\n\nexport const PostButtonWrapper = styled.div`\n  height: 45px;\n  display: flex;\n  align-items: center;\n  justify-content: flex-end;\n  padding-right: 10px;\n`;\n\nexport const PostButton = styled.span`\n  border-radius: 10px;\n  background-color: #f7dd07;\n  color: white;\n  padding: 5px 10px 5px 10px;\n  cursor: pointer;\n`;\n","import styled from \"styled-components\";\n\nimport { BiSolidUser } from \"react-icons/bi\";\nimport { AiOutlinePlusCircle } from \"react-icons/ai\";\n\nexport const ProfileImgSelectButtonWrapper = styled.label`\n  width: 40%;\n  height: auto;\n  display: flex;\n  justify-content: center;\n  font-size: 17px;\n  border-radius: 10px;\n  padding: 10px 0px;\n  &:hover {\n    background-color: #f6f9f9;\n  }\n  cursor: pointer;\n`;\n\nexport const ProfileImg = styled.img`\n  width: 90px;\n  height: 90px;\n  border-radius: 50%;\n  font-size: 100px;\n  object-fit: cover;\n`;\n\nexport const ProfileImgSelectIcon = styled(AiOutlinePlusCircle)`\n  margin-right: 5px;\n  font-size: 20px;\n`;\n\nexport const ConfigImgOptionWrapper = styled.div`\n  height: auto;\n  display: flex;\n  align-items: center;\n  padding: 10px;\n`;\n\nexport const OptionTitle = styled.div``;\n\nexport const ProfileImgWrapper = styled.div`\n  width: 150px;\n  height: 150px;\n  display: flex;\n  align-items: center;\n  justify-content: flex-start;\n`;\n\nexport const BasicProfileImgIcon = styled(BiSolidUser)`\n  border-radius: 50%;\n  background-color: #dbdbdb;\n  color: white;\n  font-size: 100px;\n  padding: 5px;\n`;\n","import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { useSetRecoilState } from \"recoil\";\n\n//Atoms\nimport ModalOpenAtom from \"../../../store/ModalOpenAtom\";\n\n//Styled-Components\nimport {\n  ConfigWrapper,\n  ConfigOptionWrapper,\n  PostButtonWrapper,\n  PostButton,\n} from \"../../../StyledComponents/ProfileStyle/ProfileConfig/ProfileConfigCommonSt\";\n\nimport {\n  ProfileImgSelectButtonWrapper,\n  ConfigImgOptionWrapper,\n  ProfileImgWrapper,\n  ProfileImg,\n  BasicProfileImgIcon,\n  ProfileImgSelectIcon,\n  OptionTitle,\n} from \"../../../StyledComponents/ProfileStyle/ProfileConfig/ProfileInfoSettingOptionCpSt\";\n\nimport { Input } from \"../../../StyledComponents/CommonCpStyle/Input/Input\";\nimport { useMutation, useQueryClient } from \"@tanstack/react-query\";\n\nconst ProfileInfoSettingOptionCp = ({ userInfo }) => {\n  const [profileImg, setProfileImg] = useState(userInfo.profileImg);\n  const [newProfileImg, setNewProfileImg] = useState(null);\n  const [userName, setUserName] = useState(userInfo.name);\n  const [userNickname, setUserNickname] = useState(userInfo.nickname);\n\n  const setProfileConfigModalOpen = useSetRecoilState(\n    ModalOpenAtom(\"profileConfigModal\")\n  );\n\n  const formData = new FormData();\n  if (newProfileImg) {\n    formData.append(\"img\", newProfileImg);\n  }\n\n  function handleImgSelect(e) {\n    const selectedImg = e.target.files[0];\n    if (selectedImg && selectedImg.type.startsWith(\"image/\")) {\n      setNewProfileImg(selectedImg);\n    }\n  }\n\n  //api\n  const updateProfileInfo = async () => {\n    try {\n      if (newProfileImg) {\n        const imgData = await axios.post(\"/post/profile-img\", formData);\n        const response = await axios.patch(\"/update/user/profile-info\", {\n          img: imgData.data.url,\n          nickname: userNickname,\n          name: userName,\n        });\n        return response;\n      }\n      if (!newProfileImg) {\n        const response = await axios.patch(\"/update/user/profile-info\", {\n          nickname: userNickname,\n          name: userName,\n        });\n        return response;\n      }\n    } catch (error) {\n      console.error(error, \"프로필 정보 수정 변경 실패\");\n    }\n  };\n\n  const queryClient = useQueryClient();\n  const { mutate } = useMutation({\n    mutationFn: updateProfileInfo,\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"myUserInfo\"] });\n      setProfileConfigModalOpen(false);\n    },\n  });\n\n  return (\n    <ConfigWrapper>\n      <ConfigOptionWrapper height={\"auto\"} flexD={\"column\"}>\n        <div>이름</div>\n        <Input\n          value={userName}\n          onChange={(e) => {\n            setUserName(e.target.value);\n          }}\n          width=\"100%\"\n          height=\"50px\"\n          color=\"gray\"\n          borderR=\"7px\"\n          backC=\"#ffffff\"\n          fontSize=\"15px\"\n          paddingL=\"10\"\n          marginT=\"10\"\n          border={{ borderPx: \"0.5px\", color: \"gray\" }}\n        />\n      </ConfigOptionWrapper>\n      <ConfigOptionWrapper height={\"auto\"} marginT={\"10\"} flexD={\"column\"}>\n        사용자 이름\n        <Input\n          value={userNickname}\n          onChange={(e) => {\n            setUserNickname(e.target.value);\n          }}\n          height=\"50px\"\n          width=\"100%\"\n          color=\"gray\"\n          borderR=\"7px\"\n          backC=\"#ffffff\"\n          fontSize=\"15px\"\n          paddingL=\"10\"\n          marginT=\"10\"\n          border={{ borderPx: \"0.5px\", color: \"gray\" }}\n        />\n      </ConfigOptionWrapper>\n      <ConfigImgOptionWrapper height={\"auto\"}>\n        <ProfileImgWrapper>\n          {ProfileImg ? (\n            <ProfileImg\n              src={\n                newProfileImg ? URL.createObjectURL(newProfileImg) : profileImg\n              }\n            />\n          ) : (\n            <>\n              {newProfileImg ? (\n                <ProfileImg src={newProfileImg} />\n              ) : (\n                <BasicProfileImgIcon />\n              )}\n            </>\n          )}\n        </ProfileImgWrapper>\n\n        <ProfileImgSelectButtonWrapper htmlFor=\"profileImg\">\n          <ProfileImgSelectIcon />\n          <OptionTitle>프로필 사진 변경하기</OptionTitle>\n          <Input\n            id=\"profileImg\"\n            type=\"file\"\n            accept=\"image/*\"\n            hidden\n            onChange={(e) => {\n              handleImgSelect(e);\n            }}\n            height=\"50px\"\n            color=\"gray\"\n            borderR=\"7px\"\n            backC=\"#ffffff\"\n            fontSize=\"15px\"\n            paddingL=\"10\"\n            marginT=\"10\"\n            border={{ borderPx: \"0.5px\", color: \"gray\" }}\n          />\n        </ProfileImgSelectButtonWrapper>\n      </ConfigImgOptionWrapper>\n      <PostButtonWrapper>\n        <PostButton\n          onClick={() => {\n            mutate();\n          }}\n        >\n          저장하기\n        </PostButton>\n      </PostButtonWrapper>\n    </ConfigWrapper>\n  );\n};\n\nexport default ProfileInfoSettingOptionCp;\n","import styled from \"styled-components\";\n\nlet marginDirection = {\n  marginL: \"margin-left\",\n  marginR: \"margin-right\",\n  marginB: \"margin-bottom\",\n  marginT: \"margin-top\",\n};\n\nlet marginDynamic = (props) => {\n  let marginValue = ``;\n\n  for (const key in props) {\n    if (marginDirection[key]) {\n      marginValue += `\n              ${marginDirection[key]} : ${props[key]}px\n              `;\n    }\n  }\n\n  return marginValue;\n};\n\nexport const ConfigOptionTitle = styled.div`\n  ${(props) => marginDynamic(props)};\n`;\n\nexport const Email = styled.span`\n  ${(props) => marginDynamic(props)};\n`;\n","import React from \"react\";\n\n//Styled-Components\nimport {\n  ConfigWrapper,\n  ConfigOptionWrapper,\n  PostButtonWrapper,\n  PostButton,\n} from \"../../../StyledComponents/ProfileStyle/ProfileConfig/ProfileConfigCommonSt\";\n\nimport {\n  Email,\n  ConfigOptionTitle,\n} from \"../../../StyledComponents/ProfileStyle/ProfileConfig/ProfileInfoOptionCpSt\";\n\nconst ProfileInfoOptionCp = ({ userEmail }) => {\n  return (\n    <ConfigWrapper>\n      <ConfigOptionWrapper height={\"auto\"} flexD={\"column\"}>\n        <ConfigOptionTitle marginT={\"15\"}>이메일</ConfigOptionTitle>\n        <Email marginT={\"15\"}>{userEmail}</Email>\n      </ConfigOptionWrapper>\n      <PostButtonWrapper>\n        <PostButton onClick={() => {}}>닫기</PostButton>\n      </PostButtonWrapper>\n    </ConfigWrapper>\n  );\n};\n\nexport default ProfileInfoOptionCp;\n","import React, { useState } from \"react\";\n\n//Styled-Components\nimport {\n  ConfigWrapper,\n  ConfigOptionWrapper,\n  PostButton,\n  PostButtonWrapper,\n} from \"../../../StyledComponents/ProfileStyle/ProfileConfig/ProfileConfigCommonSt\";\n\nimport { Input } from \"../../../StyledComponents/CommonCpStyle/Input/Input\";\n\nconst ProfilePasswordOptionCp = () => {\n  const [existingPassword, setExistingPassword] = useState(\"\");\n  const [newPassword, setNewPassword] = useState(\"\");\n  const [checkNewPassword, setCheckNewPassword] = useState(\"\");\n\n  /*\n  const handlePost = async () => {\n    try {\n      const imgData = await axios.post(\"/post/profile-img\", formData);\n\n      const response = await axios.patch(\"/update/user/profile-info\", {\n        img: imgData.data.url,\n        nickname: userNickname,\n        name: userName,\n      });\n    } catch (error) {\n      console.error(error);\n    }\n  };*/\n\n  return (\n    <ConfigWrapper>\n      <ConfigOptionWrapper height={\"auto\"} flexD={\"column\"}>\n        <div>현재 비밀번호</div>\n        <Input\n          value={existingPassword}\n          onChange={(e) => {\n            setExistingPassword(e.target.value);\n          }}\n          width=\"100%\"\n          height=\"50px\"\n          color=\"gray\"\n          borderR=\"7px\"\n          backC=\"#ffffff\"\n          fontSize=\"15px\"\n          paddingL=\"10\"\n          marginT=\"10\"\n          border={{ borderPx: \"0.5px\", color: \"gray\" }}\n        />\n      </ConfigOptionWrapper>\n      <ConfigOptionWrapper height={\"auto\"} marginT={\"10\"} flexD={\"column\"}>\n        <div>새 비밀번호</div>\n        <Input\n          value={newPassword}\n          onChange={(e) => {\n            setNewPassword(e.target.value);\n          }}\n          width=\"100%\"\n          height=\"50px\"\n          color=\"gray\"\n          borderR=\"7px\"\n          backC=\"#ffffff\"\n          fontSize=\"15px\"\n          paddingL=\"10\"\n          marginT=\"10\"\n          border={{ borderPx: \"0.5px\", color: \"gray\" }}\n        />\n      </ConfigOptionWrapper>\n      <ConfigOptionWrapper height={\"auto\"} flexD={\"column\"} marginT={\"10\"}>\n        <div>새 비밀번호 확인</div>\n        <Input\n          value={checkNewPassword}\n          onChange={(e) => {\n            setCheckNewPassword(e.target.value);\n          }}\n          width=\"100%\"\n          height=\"50px\"\n          color=\"gray\"\n          borderR=\"7px\"\n          backC=\"#ffffff\"\n          fontSize=\"15px\"\n          paddingL=\"10\"\n          marginT=\"10\"\n          border={{ borderPx: \"0.5px\", color: \"gray\" }}\n        />\n      </ConfigOptionWrapper>\n      <PostButtonWrapper>\n        <PostButton onClick={() => {}}>변경하기</PostButton>\n      </PostButtonWrapper>\n    </ConfigWrapper>\n  );\n};\n\nexport default ProfilePasswordOptionCp;\n","import React, { useRef, useState } from \"react\";\nimport { useSetRecoilState } from \"recoil\";\n\n//Styled-Components\nimport {\n  ProfileConfigModalWrapper,\n  ProfileConfigWrapper,\n  ProfileConfigListItem,\n  ConfigTitleWrapper,\n  ConfigTitle,\n  OpenIcon,\n  CloseIcon,\n} from \"../../StyledComponents/ProfileStyle/ProfileConfigModalCpSt\";\n\n//Components\nimport ProfileInfoSettingOptionCp from \"./ProfileConfigOptions/ProfileInfoSettingOptionCp\";\nimport ProfileInfoOptionCp from \"./ProfileConfigOptions/ProfileInfoOptionCp\";\nimport ProfilePasswordOptionCp from \"./ProfileConfigOptions/ProfilePasswordOptionCp\";\n\n//Atoms\nimport ModalOpenAtom from \"../../store/ModalOpenAtom\";\n\n//Custom hook\nimport UserInfoQuery from \"../../customHooks/userInfoQuery\";\n\nconst ProfileConfigModal = () => {\n  const profileConfigModalBackground = useRef();\n\n  const userInfo = UserInfoQuery();\n  const setConfigModalOpen = useSetRecoilState(\n    ModalOpenAtom(\"profileConfigModal\")\n  );\n\n  const [profileSettingOption, setProfileSettingOption] = useState(false);\n  const [passwordOption, setPasswordOption] = useState(false);\n  const [userInfoOption, setUserInfoOption] = useState(false);\n\n  return (\n    <ProfileConfigModalWrapper\n      ref={profileConfigModalBackground}\n      onClick={(e) => {\n        if (e.target === profileConfigModalBackground.current) {\n          setConfigModalOpen(false);\n        }\n      }}\n    >\n      <ProfileConfigWrapper>\n        <ProfileConfigListItem>\n          <ConfigTitleWrapper>\n            <ConfigTitle>프로필 설정</ConfigTitle>\n            {profileSettingOption ? (\n              <CloseIcon\n                onClick={() => {\n                  setProfileSettingOption(!profileSettingOption);\n                }}\n              />\n            ) : (\n              <OpenIcon\n                onClick={() => {\n                  setProfileSettingOption(!profileSettingOption);\n                  setPasswordOption(false);\n                  setUserInfoOption(false);\n                }}\n              />\n            )}\n          </ConfigTitleWrapper>\n          {profileSettingOption && (\n            <ProfileInfoSettingOptionCp userInfo={userInfo} />\n          )}\n        </ProfileConfigListItem>\n        <ProfileConfigListItem>\n          <ConfigTitleWrapper>\n            <ConfigTitle>비밀번호 변경</ConfigTitle>\n            {passwordOption ? (\n              <CloseIcon\n                onClick={() => {\n                  setPasswordOption(!passwordOption);\n                }}\n              />\n            ) : (\n              <OpenIcon\n                onClick={() => {\n                  setPasswordOption(!passwordOption);\n                  setUserInfoOption(false);\n                  setProfileSettingOption(false);\n                }}\n              />\n            )}\n          </ConfigTitleWrapper>\n          {passwordOption && <ProfilePasswordOptionCp />}\n        </ProfileConfigListItem>\n        <ProfileConfigListItem>\n          <ConfigTitleWrapper>\n            <ConfigTitle>개인정보</ConfigTitle>\n            {userInfoOption ? (\n              <CloseIcon\n                onClick={() => {\n                  setUserInfoOption(!userInfoOption);\n                }}\n              />\n            ) : (\n              <OpenIcon\n                onClick={() => {\n                  setUserInfoOption(!userInfoOption);\n                  setPasswordOption(false);\n                  setProfileSettingOption(false);\n                }}\n              />\n            )}\n          </ConfigTitleWrapper>\n          {userInfoOption && <ProfileInfoOptionCp userEmail={userInfo.email} />}\n        </ProfileConfigListItem>\n      </ProfileConfigWrapper>\n    </ProfileConfigModalWrapper>\n  );\n};\n\nexport default ProfileConfigModal;\n\n/*\n\nlet marginDirection = {\n  marginL: \"margin-left\",\n  marginR: \"margin-right\",\n  marginB: \"margin-bottom\",\n  marginT: \"margin-top\",\n};\n\nlet paddingDirection = {\n  paddingT: \"padding-top\",\n  paddingL: \"padding-left\",\n  paddingB: \"padding-bottom\",\n  paddingR: \"padding-right\",\n};\n\nlet paddingDynamic = (props) => {\n  let paddingValue = ``;\n\n  for (const key in props) {\n    if (paddingDirection[key]) {\n      paddingValue += `\n        ${paddingDirection[key]} : ${props[key]}px\n        `;\n    }\n  }\n\n  return paddingValue;\n};\n\nlet marginDynamic = (props) => {\n  let marginValue = ``;\n\n  for (const key in props) {\n    if (marginDirection[key]) {\n      marginValue += `\n        ${marginDirection[key]} : ${props[key]}px\n        `;\n    }\n  }\n\n  return marginValue;\n};\n\nexport const ProfileConfigModalWrapper = styled.div`\n  position:fixed;\n  z-index: 17;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.5);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n`;\n\nexport const ProfileConfigWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  position: absolute;\n  z-index: 20;\n  width: 500px;\n  height: auto;\n  background-color: white;\n  border-radius: 10px;\n  opacity: 1;\n`;\n\nexport const ProfileConfigListItem = styled.div`\n  width: 100%;\n  height: auto;\n  border: 0.5px solid gray;\n  color: gray;\n  align-items: center;\n  padding: 10px;\n`;\n\nexport const ConfigTitle = styled.div`\n  display: flex;\n  align-items: center;\n  height: 60px;\n`;\n\nexport const ConfigTitleWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nexport const OpenIcon = styled(MdOutlineKeyboardArrowDown)`\n  font-size: 30px;\n  cursor: pointer;\n`;\n\nexport const CloseIcon = styled(MdOutlineKeyboardArrowUp)`\n  font-size: 30px;\n  cursor: pointer;\n`;\n*/\n"],"names":["ProfileConfigModalWrapper","styled","div","_templateObject","_taggedTemplateLiteral","ProfileConfigWrapper","_templateObject2","ProfileConfigListItem","_templateObject3","ConfigTitle","_templateObject4","ConfigTitleWrapper","_templateObject5","OpenIcon","MdOutlineKeyboardArrowDown","_templateObject6","CloseIcon","MdOutlineKeyboardArrowUp","_templateObject7","marginDirection","marginL","marginR","marginB","marginT","ConfigWrapper","ConfigOptionWrapper","props","height","marginValue","key","concat","marginDynamic","flexD","PostButtonWrapper","PostButton","span","ProfileImgSelectButtonWrapper","label","ProfileImg","img","ProfileImgSelectIcon","AiOutlinePlusCircle","ConfigImgOptionWrapper","OptionTitle","ProfileImgWrapper","BasicProfileImgIcon","BiSolidUser","_ref","_ref2","userInfo","_useState","useState","profileImg","_useState2","_slicedToArray","_useState3","_useState4","newProfileImg","setNewProfileImg","_useState5","name","_useState6","userName","setUserName","_useState7","nickname","_useState8","userNickname","setUserNickname","setProfileConfigModalOpen","useSetRecoilState","ModalOpenAtom","formData","FormData","append","queryClient","useQueryClient","_useMutation","useMutation","mutationFn","_asyncToGenerator","_regeneratorRuntime","mark","_callee","imgData","response","_response","wrap","_context","prev","next","axios","post","sent","patch","data","url","abrupt","t0","console","error","stop","apply","arguments","onSuccess","invalidateQueries","queryKey","mutate","_jsxs","children","_jsx","Input","value","onChange","e","target","width","color","borderR","backC","fontSize","paddingL","border","borderPx","src","URL","createObjectURL","_Fragment","htmlFor","id","type","accept","hidden","selectedImg","files","startsWith","handleImgSelect","onClick","ConfigOptionTitle","Email","userEmail","existingPassword","setExistingPassword","newPassword","setNewPassword","checkNewPassword","setCheckNewPassword","profileConfigModalBackground","useRef","UserInfoQuery","setConfigModalOpen","profileSettingOption","setProfileSettingOption","passwordOption","setPasswordOption","userInfoOption","setUserInfoOption","ref","current","ProfileInfoSettingOptionCp","ProfilePasswordOptionCp","ProfileInfoOptionCp","email"],"sourceRoot":""}