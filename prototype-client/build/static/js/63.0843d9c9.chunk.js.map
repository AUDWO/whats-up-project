{"version":3,"file":"static/js/63.0843d9c9.chunk.js","mappings":"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","sources":["StyledComponents/KeepDiaryStyle/ToggleAbleSwitchButton.js","Components/WriteDiary/ToggleAbleSwitchComponent.js","StyledComponents/CommonCpStyle/AddvancedSetUp/AddvancedSetupCpSt.js","StyledComponents/KeepDiaryStyle/KeepDiary.js","StyledComponents/KeepDiaryStyle/DiaryOption.js","Components/WriteDiary/DiaryAdvancedSetupComponent.js","StyledComponents/KeepDiaryStyle/ToggleSwitchButton.js","Components/WriteDiary/ToggleSwitchButton.js","StyledComponents/KeepDiaryStyle/DiaryImgSelect.js","Components/WriteDiary/DiaryImgSelectComponent.js","Components/WriteDiary/DiaryOptionCp.js","pages/MakeDiary.js","store/ToggleValueAtom.js","store/imgUrlAtom.js"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const ToggleAbleSwitch = styled.label`\n  width: 64px;\n  height: 3px;\n  display: block;\n  position: relative;\n  border-radius: 30px;\n  background-color: #bbbbbb;\n  box-shadow: 0px 1px 4px rgba(0, 0, 0, 0.2);\n  cursor: pointer;\n  margin: 30px;\n  transition: all 0.2s ease-in;\n`;\n\nexport const ToggleAbleButton = styled.span`\n  width: 25px;\n  height: 25px;\n  position: absolute;\n  top: 50%;\n  left: 0.1px;\n  transform: translateY(-50%);\n  border-radius: 50%;\n  background: #bbbbbb;\n  transition: all 0.2s ease-in;\n`;\nexport const AbleCheckbox = styled.input`\n  &:checked + ${ToggleAbleSwitch} {\n    background-color: #f7dd07;\n    ${ToggleAbleButton} {\n      left: calc(100% - 20px);\n      background-color: #f7dd07;\n    }\n  }\n`;\n","import React from \"react\";\nimport { useRecoilState } from \"recoil\";\n\n//Styled-Components\"\nimport {\n  AbleCheckbox,\n  ToggleAbleButton,\n  ToggleAbleSwitch,\n} from \"../../StyledComponents/KeepDiaryStyle/ToggleAbleSwitchButton\";\n\n//Atom\nimport toggleValueAtom from \"../../store/ToggleValueAtom\";\n\nconst ToggleAbleSwitchComponent = ({ inputId, atomName }) => {\n  const [toggleValue, setToggleValue] = useRecoilState(\n    toggleValueAtom(`${atomName}`)\n  );\n\n  return (\n    <>\n      <AbleCheckbox\n        id={inputId}\n        type=\"checkbox\"\n        hidden\n        checked={toggleValue}\n        onChange={() => setToggleValue(!toggleValue)}\n      />\n      <ToggleAbleSwitch htmlFor={inputId}>\n        <ToggleAbleButton></ToggleAbleButton>\n      </ToggleAbleSwitch>\n    </>\n  );\n};\n\nexport default ToggleAbleSwitchComponent;\n","import styled from \"styled-components\";\n\nexport const Option = styled.div`\n  width: 350px;\n  height: ${(props) => props.height};\n  margin-bottom: 100px;\n  padding: 10px 5px 10px 20px;\n  border-radius: 10px;\n  box-shadow: 0px 1px 4px rgba(0, 0, 0, 0.2);\n`;\n\nexport const AbleButtonTitle = styled.div``;\n\nexport const ToggleAbleButtonWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\n","import styled from \"styled-components\";\n\nexport const DiaryOptionWrapper = styled.div`\n  padding: 30px;\n  height: 1100px;\n`;\n\nexport const DiaryTextareaWrapper = styled.div`\n  padding: 30px;\n`;\n\nexport const KeepDiaryTitle = styled.input`\n  font-size: 32px;\n  font-weight: 700;\n  width: 500px;\n  height: 70px;\n  border: none;\n`;\n\nexport const DiaryTextarea = styled.textarea`\n  width: 500px;\n  height: 600px;\n  padding: 20px 0px 20px 0px;\n  font-size: 25px;\n  border: none;\n  outline: none;\n`;\n\nexport const DiaryContentText = styled.div`\n  font-size: 30px;\n  color: #757575;\n  font-weight: 600;\n  margin-top: 10px;\n  margin-bottom: 20px;\n`;\n\nexport const PostDiaryButtonForm = styled.form`\n  display: flex;\n  justify-content: space-around;\n  margin-top: 40px;\n`;\n\nexport const PostDiaryButton = styled.button`\n  width: 100px;\n  height: 40px;\n  color: #858e96;\n  font-size: 16px;\n  font-weight: 600;\n  border-radius: 10px;\n  box-shadow: 0px 1px 4px rgba(0, 0, 0, 0.2);\n  cursor: pointer;\n  transition: all 0.5s;\n  &:hover {\n    background-color: #14b885;\n    color: white;\n  }\n`;\n\nexport const DeleteDiaryButton = styled.button`\n  width: 100px;\n  height: 40px;\n  color: #858e96;\n  font-size: 16px;\n  font-weight: 600;\n  border-radius: 10px;\n  box-shadow: 0px 1px 4px rgba(0, 0, 0, 0.2);\n  cursor: pointer;\n  transition: all 0.5s;\n  &:hover {\n    background-color: #ed203d;\n    color: white;\n  }\n`;\n","import styled from \"styled-components\";\n\nexport const DiaryAdvanceSetupWrapper = styled.div`\n  width: 400px;\n  height: 200px;\n`;\n\nconst DiaryOption = styled.div`\n  width: 500px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  font-size: 17px;\n`;\n\nexport const DiaryOptionImg = styled(DiaryOption)``;\n\nexport const DiaryOptionPublic = styled(DiaryOption)``;\n","import React from \"react\";\n\n//Styled-Components\nimport {\n  Option,\n  ToggleAbleButtonWrapper,\n  AbleButtonTitle,\n} from \"../../StyledComponents/CommonCpStyle/AddvancedSetUp/AddvancedSetupCpSt\";\n\n//Component\nimport ToggleAbleSwitchComponent from \"./ToggleAbleSwitchComponent\";\n\nconst DiaryAdvancedSetupCp = () => {\n  return (\n    <Option height={\"140px\"}>\n      <ToggleAbleButtonWrapper>\n        <AbleButtonTitle>반응 기능 해제</AbleButtonTitle>\n        <ToggleAbleSwitchComponent\n          inputId={\"likeCount\"}\n          atomName={\"diaryReact\"}\n        />\n      </ToggleAbleButtonWrapper>\n      <ToggleAbleButtonWrapper>\n        <AbleButtonTitle>댓글 기능 해제</AbleButtonTitle>\n        <ToggleAbleSwitchComponent\n          inputId={\"Comments\"}\n          atomName={\"diaryComment\"}\n        />\n      </ToggleAbleButtonWrapper>\n    </Option>\n  );\n};\n\nexport default DiaryAdvancedSetupCp;\n","import styled from \"styled-components\";\n\nexport const ToggleSwitchWrapper = styled.div``;\n\nexport const ToggleButton = styled.span`\n  width: 20px;\n  height: 20px;\n  position: absolute;\n  top: 50%;\n  left: 4px;\n  transform: translateY(-50%);\n  border-radius: 50%;\n  background: #555555;\n  transition: all 0.2s ease-in;\n`;\n\nexport const ToggleSwitch = styled.label`\n  width: 64px;\n  height: 32px;\n  display: block;\n  position: relative;\n  border-radius: 30px;\n  background-color: #fff;\n  box-shadow: 0px 1px 4px rgba(0, 0, 0, 0.2);\n  cursor: pointer;\n  margin: 30px;\n  transition: all 0.2s ease-in;\n\n  border: 3px solid #555555;\n`;\n\nexport const Checkbox = styled.input`\n  &:checked + ${ToggleSwitch} {\n    border: 3px solid #f7dd07;\n    ${ToggleButton} {\n      left: calc(100% - 25px);\n      background-color: #f7dd07;\n    }\n  }\n`;\n","import React from \"react\";\nimport { useRecoilState } from \"recoil\";\n\n//Styled-Components\nimport {\n  ToggleSwitch,\n  ToggleSwitchWrapper,\n  Checkbox,\n  ToggleButton,\n} from \"../../StyledComponents/KeepDiaryStyle/ToggleSwitchButton\";\n\n//Atom\nimport toggleValueAtom from \"../../store/ToggleValueAtom\";\n\nconst ToggleSwitchButtonCp = ({ inputId, atomName }) => {\n  const [toggleValue, setToggleValue] = useRecoilState(\n    toggleValueAtom(atomName)\n  );\n\n  return (\n    <ToggleSwitchWrapper>\n      <Checkbox\n        id={inputId}\n        type=\"checkbox\"\n        hidden\n        value={toggleValue}\n        onChange={() => setToggleValue(!toggleValue)}\n      />\n      <ToggleSwitch htmlFor={inputId}>\n        <ToggleButton></ToggleButton>\n      </ToggleSwitch>\n    </ToggleSwitchWrapper>\n  );\n};\n\nexport default ToggleSwitchButtonCp;\n","import styled from \"styled-components\";\n\nexport const DiaryImgButtonWrapper = styled.div`\n  display: flex;\n`;\n\nexport const DiaryImgCancelButton = styled.div`\n  width: 100px;\n  height: 40px;\n  text-align: center;\n  padding: 10px;\n  border-radius: 7px;\n  color: #858e96;\n  margin-right: 40px;\n  font-size: 16px;\n  font-weight: 600;\n  &:hover {\n    color: #f7dd07;\n  }\n  cursor: pointer;\n  box-shadow: 0px 1px 4px rgba(0, 0, 0, 0.2);\n`;\n\nexport const DiaryImgButton = styled.label`\n  width: 100px;\n  height: 40px;\n  text-align: center;\n  padding: 10px;\n  border-radius: 7px;\n  color: #858e96;\n  margin-right: 40px;\n  font-size: 16px;\n  font-weight: 600;\n  &:hover {\n    color: #f7dd07;\n  }\n  cursor: pointer;\n  box-shadow: 0px 1px 4px rgba(0, 0, 0, 0.2);\n`;\n\nexport const DiaryImgWrapper = styled.div`\n  box-shadow: 0px 1px 4px rgba(0, 0, 0, 0.2);\n  width: 500px;\n  height: 350px;\n`;\n\nexport const DiaryImgInput = styled.input`\n  display: none;\n`;\n\nexport const DiaryImgForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 50px;\n`;\n\nexport const DiaryImgDiv = styled.div`\n  width: 100%;\n  height: 100%;\n`;\n\nexport const DiaryImg = styled.img`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n`;\n","import React, { useRef } from \"react\";\nimport {\n  DiaryImgWrapper,\n  DiaryImgForm,\n  DiaryImgButtonWrapper,\n  DiaryImgButton,\n  DiaryImgInput,\n  DiaryImgCancelButton,\n  DiaryImg,\n  DiaryImgDiv,\n} from \"../../StyledComponents/KeepDiaryStyle/DiaryImgSelect\";\nimport { useRecoilState } from \"recoil\";\nimport imgUrlAtom from \"../../store/imgUrlAtom\";\nimport axios from \"axios\";\n\nconst DiaryImgSelectComponent = () => {\n  const [imgUrlData, setImgUrlData] = useRecoilState(imgUrlAtom(\"diaryImgUrl\"));\n  const [imgOriginalUrlData, setImgOriginalUrlData] = useRecoilState(\n    imgUrlAtom(\"diaryImgOriginalUrl\")\n  );\n\n  const imgUrlRef = useRef();\n  const imgPreviewRef = useRef();\n\n  const formData = new FormData();\n\n  const handleSubmitPostImg = async (formData) => {\n    try {\n      return await axios.post(\"/post/diaryimg\", formData);\n    } catch (error) {\n      console.error(error, \"handleSubmitPostImg -ERROR\");\n    }\n  };\n\n  const handleFileSelect = async (e) => {\n    e.preventDefault();\n    const selectedImgUrl = e.target.files[0];\n    if (selectedImgUrl && selectedImgUrl.type.startsWith(\"image/\")) {\n      formData.append(\"img\", selectedImgUrl);\n      const response = await handleSubmitPostImg(formData);\n      setImgOriginalUrlData(response.data.originalUrl);\n      setImgUrlData(response.data.url);\n    }\n  };\n\n  return (\n    <div>\n      <DiaryImgForm>\n        <DiaryImgButtonWrapper>\n          <DiaryImgButton htmlFor=\"diaryImg\">사진 선택</DiaryImgButton>\n          <DiaryImgInput\n            id=\"diaryImg\"\n            type=\"file\"\n            accept=\"image/*\"\n            name=\"diaryImg\"\n            onChange={handleFileSelect}\n          />\n          <DiaryImgCancelButton\n            onClick={() => {\n              setImgOriginalUrlData(\"\");\n              setImgUrlData(\"\");\n            }}\n          >\n            삭제하기\n          </DiaryImgCancelButton>\n        </DiaryImgButtonWrapper>\n      </DiaryImgForm>\n\n      <DiaryImgWrapper>\n        <DiaryImgDiv>\n          {imgOriginalUrlData && (\n            <DiaryImg\n              id=\"image-preview\"\n              src={imgOriginalUrlData}\n              alt=\"미리보기\"\n              ref={imgPreviewRef}\n            />\n          )}\n\n          <input\n            value=\"\"\n            type=\"hidden\"\n            name=\"url\"\n            ref={imgUrlRef}\n            onChange={handleFileSelect}\n          />\n        </DiaryImgDiv>\n      </DiaryImgWrapper>\n    </div>\n  );\n};\n\nexport default DiaryImgSelectComponent;\n","import React from \"react\";\nimport { useRecoilValue } from \"recoil\";\n\n//Styled-Components\nimport {\n  DiaryAdvanceSetupWrapper,\n  DiaryOptionImg,\n  DiaryOptionPublic,\n} from \"../../StyledComponents/KeepDiaryStyle/DiaryOption\";\n\n//Components\nimport DiaryAdvancedSetupComponent from \"./DiaryAdvancedSetupComponent\";\nimport ToggleSwitchButtonCp from \"./ToggleSwitchButton\";\nimport DiaryImgSelectComponent from \"./DiaryImgSelectComponent\";\n\n//Atoms\nimport toggleValueAtom from \"../../store/ToggleValueAtom\";\n\nconst DiaryOptionCp = () => {\n  const toggleImgValue = useRecoilValue(toggleValueAtom(\"Img\"));\n  const togglePublicValue = useRecoilValue(toggleValueAtom(\"public\"));\n\n  return (\n    <DiaryAdvanceSetupWrapper>\n      <DiaryOptionImg>\n        사진 업로드\n        <ToggleSwitchButtonCp inputId={\"toggleImg\"} atomName={\"Img\"} />\n      </DiaryOptionImg>\n      {toggleImgValue && <DiaryImgSelectComponent />}\n      <DiaryOptionPublic>\n        공개\n        <ToggleSwitchButtonCp inputId={\"togglePublic\"} atomName={\"public\"} />\n      </DiaryOptionPublic>\n      {togglePublicValue && <DiaryAdvancedSetupComponent />}\n    </DiaryAdvanceSetupWrapper>\n  );\n};\n\nexport default DiaryOptionCp;\n","import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { useRecoilState, useRecoilValue, useSetRecoilState } from \"recoil\";\nimport { useNavigate } from \"react-router-dom\";\n\n//Styled-Component\nimport HomeWraper from \"../StyledComponents/HomeStyle/HomeWrapper\";\n\nimport {\n  DiaryTextarea,\n  DiaryContentText,\n  PostDiaryButton,\n  PostDiaryButtonForm,\n  DiaryTextareaWrapper,\n  DiaryOptionWrapper,\n  KeepDiaryTitle,\n  DeleteDiaryButton,\n} from \"../StyledComponents/KeepDiaryStyle/KeepDiary\";\n\n//Component\nimport DiaryOptionCp from \"../Components/WriteDiary/DiaryOptionCp\";\n\n//Atoms\nimport toggleValueAtom from \"../store/ToggleValueAtom\";\nimport imgUrlAtom from \"../store/imgUrlAtom\";\nimport { useMutation, useQueryClient } from \"@tanstack/react-query\";\n\nconst MakeDiary = () => {\n  useEffect(() => {\n    handleDiaryOptionReset();\n  }, []);\n\n  const navigate = useNavigate();\n  const likeControl = useRecoilValue(toggleValueAtom(\"diaryReact\"));\n  const commentControl = useRecoilValue(toggleValueAtom(\"diaryComment\"));\n  const publicControl = useRecoilValue(toggleValueAtom(\"public\"));\n  const [imgUrlData, setImgUrlData] = useRecoilState(imgUrlAtom(\"diaryImgUrl\"));\n\n  //다른 페이지에 나갔다가 다시 들어오면 설정값을 초기화시키기 위해 필요한 토글 값들\n  const [toggleImgValue, setToggleImgValue] = useRecoilState(\n    toggleValueAtom(\"Img\")\n  );\n  const setTogglePublicValue = useSetRecoilState(toggleValueAtom(\"public\"));\n  const setToggleDiaryReactControl = useSetRecoilState(\n    toggleValueAtom(\"diaryReact\")\n  );\n  const setToggleDiaryCommentControl = useSetRecoilState(\n    toggleValueAtom(\"diaryComment\")\n  );\n  //-------------------\n\n  const [content, setContent] = useState(\"\");\n  const [title, setTitle] = useState(\"\");\n\n  const formData = new FormData();\n  if (imgUrlAtom) {\n    formData.append(\"img\", imgUrlData);\n  }\n\n  const handleDiaryOptionReset = () => {\n    setToggleImgValue(false);\n    setTogglePublicValue(false);\n    setToggleDiaryCommentControl(false);\n    setToggleDiaryReactControl(false);\n  };\n\n  const handleReset = () => {\n    setImgUrlData(false);\n    setToggleImgValue(false);\n    setTogglePublicValue(false);\n  };\n\n  //일기를 쓰기 위해 확인해야할 조건들 (모든 조건들을 만족하면 handlePostDiary가 실행됨)\n  const handleWritingDiaryCheck = async () => {\n    if (content.length < 1) {\n      alert(\"내용을 작성해주세요!\");\n      return;\n    }\n    if (title.length < 1) {\n      alert(\"제목을 작성해주세요!\");\n      return;\n    }\n\n    if (toggleImgValue) {\n      if (!imgUrlData) {\n        alert(\"사진을 선택해주세요.\");\n        return;\n      }\n    }\n    mutate();\n  };\n\n  const createDiary = async () => {\n    try {\n      //사진을 선택한 경우\n      if (imgUrlData) {\n        if (publicControl) {\n          const postResponse = await axios.post(\"/post/diary\", {\n            url: imgUrlData,\n            likeControl: !likeControl,\n            commentControl: !commentControl,\n            publicControl: publicControl,\n            content: content,\n            title: title,\n          });\n          return postResponse;\n        }\n\n        if (!publicControl) {\n          const postResponse = await axios.post(\"/post/diary\", {\n            url: imgUrlData,\n            likeControl: likeControl,\n            commentControl: commentControl,\n            publicControl: publicControl,\n            content: content,\n            title: title,\n          });\n          return postResponse;\n        }\n      }\n      //사진을 선택하지 않은 경우\n      if (!imgUrlData) {\n        if (publicControl) {\n          const postResponse = await axios.post(\"/post/diary\", {\n            likeControl: !likeControl,\n            commentControl: !commentControl,\n            publicControl: publicControl,\n            content: content,\n            title: title,\n          });\n\n          return postResponse;\n        }\n\n        if (!publicControl) {\n          const postResponse = await axios.post(\"/post/diary\", {\n            likeControl: likeControl,\n            commentControl: commentControl,\n            publicControl: publicControl,\n            content: content,\n            title: title,\n          });\n          return postResponse;\n        }\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const queryClient = useQueryClient();\n  const { mutate } = useMutation({\n    mutationFn: createDiary,\n    onSuccess: () => {\n      queryClient.invalidateQueries({\n        queryKey: [\"diaryContentsInfo\"],\n      });\n      queryClient.invalidateQueries({\n        queryKey: [\"myUserInfo\"],\n      });\n      if (publicControl) {\n        navigate(\"/dashboard/diary\");\n      }\n      if (!publicControl) {\n        navigate(\"/dashboard/profile\");\n      }\n      handleReset();\n    },\n  });\n\n  return (\n    <HomeWraper>\n      <DiaryOptionWrapper>\n        <KeepDiaryTitle\n          placeholder=\"제목을 입력해주세요...\"\n          value={title}\n          onChange={(e) => {\n            setTitle(e.target.value);\n          }}\n        />\n        <DiaryOptionCp />\n      </DiaryOptionWrapper>\n      <DiaryTextareaWrapper>\n        <DiaryContentText>내용</DiaryContentText>\n        <DiaryTextarea\n          name=\"content\"\n          value={content}\n          placeholder=\"당신의 이야기를 들려주세요.\"\n          onChange={(e) => {\n            setContent(e.target.value);\n          }}\n        ></DiaryTextarea>\n        <PostDiaryButtonForm>\n          <PostDiaryButton\n            onClick={(e) => {\n              e.preventDefault();\n              handleWritingDiaryCheck();\n            }}\n          >\n            일기쓰기\n          </PostDiaryButton>\n          <DeleteDiaryButton>삭제하기</DeleteDiaryButton>\n        </PostDiaryButtonForm>\n      </DiaryTextareaWrapper>\n    </HomeWraper>\n  );\n};\n\nexport default MakeDiary;\n","import { atomFamily } from \"recoil\";\n\nconst toggleValueAtom = atomFamily({\n  key: \"toggleValue\",\n  default: false,\n});\n\nexport default toggleValueAtom;\n","import { atomFamily } from \"recoil\";\n\nconst imgUrlAtom = atomFamily({\n  key: \"imgUrl\",\n  default: false,\n});\n\nexport default imgUrlAtom;\n"],"names":["ToggleAbleSwitch","styled","label","_templateObject","_taggedTemplateLiteral","ToggleAbleButton","span","_templateObject2","AbleCheckbox","input","_templateObject3","_ref","inputId","atomName","_useRecoilState","useRecoilState","toggleValueAtom","concat","_useRecoilState2","_slicedToArray","toggleValue","setToggleValue","_jsxs","_Fragment","children","_jsx","id","type","hidden","checked","onChange","htmlFor","Option","div","props","height","AbleButtonTitle","ToggleAbleButtonWrapper","DiaryOptionWrapper","DiaryTextareaWrapper","KeepDiaryTitle","DiaryTextarea","textarea","_templateObject4","DiaryContentText","_templateObject5","PostDiaryButtonForm","form","_templateObject6","PostDiaryButton","button","_templateObject7","DeleteDiaryButton","_templateObject8","DiaryAdvanceSetupWrapper","DiaryOption","DiaryOptionImg","DiaryOptionPublic","ToggleAbleSwitchComponent","ToggleSwitchWrapper","ToggleButton","ToggleSwitch","Checkbox","value","DiaryImgButtonWrapper","DiaryImgCancelButton","DiaryImgButton","DiaryImgWrapper","DiaryImgInput","DiaryImgForm","DiaryImgDiv","DiaryImg","img","_ref2","imgUrlAtom","setImgUrlData","_useRecoilState3","_useRecoilState4","imgOriginalUrlData","setImgOriginalUrlData","imgUrlRef","useRef","imgPreviewRef","formData","FormData","handleSubmitPostImg","_x","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","axios","post","abrupt","sent","t0","console","error","stop","apply","arguments","handleFileSelect","_x2","_callee2","e","selectedImgUrl","response","_context2","preventDefault","target","files","startsWith","append","data","originalUrl","url","accept","name","onClick","src","alt","ref","toggleImgValue","useRecoilValue","togglePublicValue","ToggleSwitchButtonCp","DiaryImgSelectComponent","DiaryAdvancedSetupComponent","useEffect","handleDiaryOptionReset","navigate","useNavigate","likeControl","commentControl","publicControl","imgUrlData","setToggleImgValue","setTogglePublicValue","useSetRecoilState","setToggleDiaryReactControl","setToggleDiaryCommentControl","_useState","useState","_useState2","content","setContent","_useState3","_useState4","title","setTitle","queryClient","useQueryClient","_useMutation","useMutation","mutationFn","postResponse","_postResponse","_postResponse2","_postResponse3","onSuccess","invalidateQueries","queryKey","mutate","HomeWraper","placeholder","DiaryOptionCp","length","alert","handleWritingDiaryCheck","atomFamily","key","default"],"sourceRoot":""}