{"version":3,"file":"static/js/680.b376ff51.chunk.js","mappings":"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","sources":["StyledComponents/CommonCpStyle/Input/Input.js","StyledComponents/LoginStyle/Error.js","StyledComponents/CommonCpStyle/Icon/MainIcon.js","pages/SignUp.js"],"sourcesContent":["import styled from \"styled-components\";\n\nlet marginDynamic = (props) => {\n  let marginValue = ``;\n\n  for (const key in props) {\n    if (marginDirection[key]) {\n      marginValue += `\n            ${marginDirection[key]} : ${props[key]}px\n            `;\n    }\n  }\n\n  return marginValue;\n};\n\nlet borderDynamic = (props) => {\n  let borderValue = ``;\n  for (const key in props) {\n    if (borderDirection[key]) {\n      borderValue += `\n            ${borderDirection[key]} : ${props[key].borderPx} solid ${props[key].color}\n            `;\n    }\n  }\n\n  return borderValue;\n};\n\nlet paddingDynamic = (props) => {\n  let paddingValue = ``;\n\n  for (const key in props) {\n    if (paddingDirection[key]) {\n      paddingValue += `\n      ${paddingDirection[key]} : ${props[key]}px\n      `;\n    }\n  }\n\n  return paddingValue;\n};\n\nlet paddingDirection = {\n  paddingT: \"padding-top\",\n  paddingL: \"padding-left\",\n  paddingB: \"padding-bottom\",\n  paddingR: \"padding-right\",\n};\n\nlet marginDirection = {\n  marginL: \"margin-left\",\n  marginR: \"margin-right\",\n  marginB: \"margin-bottom\",\n  marginT: \"margin-top\",\n};\n\nlet borderDirection = {\n  borderL: \"border-left\",\n  borderR: \"border-right\",\n  borderT: \"border-top\",\n  borderB: \"border-bottom\",\n};\n//  border: ${(props) => props.border.borderPx} solid\n//${(props) => props.border.color};\n\nexport const Input = styled.input`\n  font-size: ${(props) => props.fontSize};\n  height: ${(props) => props.height};\n  width: ${(props) => props.width};\n  border-radius: ${(props) => props.borderR};\n  padding: ${(props) => props.padding};\n  ${(props) => paddingDynamic(props)};\n  ${(props) => marginDynamic(props)};\n  background-color: ${(props) => props.backC};\n  border: ${(props) =>\n    props.border\n      ? `${props.border.borderPx} solid\n    ${props.border.color}`\n      : \"none\"};\n  ${(props) => borderDynamic(props)};\n  &:-webkit-autofill,\n  &:-webkit-autofill:hover,\n  &:-webkit-autofill:focus,\n  &:-webkit-autofill:active {\n    -webkit-text-fill-color: 글자색;\n    -webkit-box-shadow: 0 0 0px 1000px 배경색 inset;\n    transition: background-color 5000s ease-in-out 0s;\n  }\n`;\n","import styled from \"styled-components\";\n\nexport const PasswordDiscord = styled.div`\n  color: #ed203d;\n`;\n\nexport const PasswordUnfit = styled.div`\ncolor\"#ed203d;\n`;\n\nexport const Unsatisfied = styled.div`\n  color: #ed203d;\n`;\n\nexport const Satisfied = styled.div`\n  color: #1ec997;\n`;\n","import styled from \"styled-components\";\nimport { GiPunchBlast } from \"react-icons/gi\";\n\nexport const MainIcon = styled(GiPunchBlast)`\n  color: #f7dd07;\n  font-size: ${(props) => props.fontSize};\n`;\n","import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\n// Styled-Components\nimport Middle from \"../StyledComponents/Middle\";\nimport LoginFormWrap from \"../StyledComponents/LoginStyle/LoginFormWrap\";\nimport LoginButton from \"../StyledComponents/LoginStyle/ButtonStyle/LoginButton\";\nimport Label from \"../StyledComponents/LoginStyle/Label\";\nimport { Input } from \"../StyledComponents/CommonCpStyle/Input/Input\";\n\nimport WebTitleWrap from \"../StyledComponents/LoginStyle/WebTitleWrap\";\nimport WebTitle from \"../StyledComponents/LoginStyle/WebTitle\";\nimport {\n  CheckUserWrapper,\n  CheckUserContent,\n  GoSignUp,\n} from \"../StyledComponents/LoginStyle/UserCheck\";\nimport { Unsatisfied, Satisfied } from \"../StyledComponents/LoginStyle/Error\";\nimport { MainIcon } from \"../StyledComponents/CommonCpStyle/Icon/MainIcon\";\n\n//icon\nimport { BsCheckCircle } from \"react-icons/bs\";\n\nconst SignUp = () => {\n  const [email, setEmail] = useState(\"\");\n  const [nickname, setNickname] = useState();\n  const [password, setPassword] = useState(\"\");\n  const [passwordCheck, setPasswordCheck] = useState(\"\");\n  const [passwordDiscord, setPasswordDiscord] = useState(false);\n  const [passwordFit, setPasswordFit] = useState(false);\n\n  const [nicknameCheck, setNicknameCheck] = useState(false);\n  const [emailCheck, setEmailCheck] = useState(false);\n\n  const [emailCheckResponse, setEmailCheckResponse] = useState(false);\n  const [nicknameCheckResponse, setNicknameCheckResponse] = useState(false);\n\n  const navigate = useNavigate();\n\n  let formData = {\n    password: password,\n    email: email,\n    nickname: nickname,\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    try {\n      if (password !== passwordCheck) {\n        return;\n      }\n      const response = await axios.post(\"/auth/sign-up\", formData);\n      alert(\"회원가입 완료되었습니다!\");\n      navigate(\"/\");\n    } catch (error) {\n      console.error(\"Error:\", error);\n    }\n  };\n\n  const handlePasswordFittBlur = (e) => {\n    const value = e.target.value;\n    const passwordRegex = /^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{8,}$/;\n\n    if (passwordRegex.test(value)) {\n      setPasswordFit(false);\n    }\n\n    if (!passwordRegex.test(value)) {\n      setPasswordFit(true);\n    }\n  };\n\n  const handlePasswordDiscordBlur = (e) => {\n    if (password === passwordCheck) {\n      setPasswordDiscord(false);\n    }\n    if (password !== passwordCheck) {\n      setPasswordDiscord(true);\n    }\n  };\n\n  const checkUserEmail = async () => {\n    try {\n      const response = await axios.get(`/page/user-email-check/${email}`);\n      setEmailCheckResponse(true);\n\n      if (response.data === \"allowEmail\") {\n        setEmailCheck(true);\n      }\n      if (response.data === \"disallowEmail\") {\n        return;\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const checkUserNickname = async () => {\n    try {\n      const response = await axios.get(`/page/user-nickname-check/${nickname}`);\n      setNicknameCheckResponse(true);\n      if (response.data === \"allowNickname\") {\n        setNicknameCheck(true);\n      }\n      if (response.data === \"disallowNickname\") {\n        return;\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return (\n    <Middle>\n      <WebTitleWrap>\n        <MainIcon fontSize={\"70px\"} />\n        <WebTitle>WHAT'S UP</WebTitle>\n      </WebTitleWrap>\n      <CheckUserWrapper>\n        <CheckUserContent>이미 회원이신가요?</CheckUserContent>\n        <GoSignUp\n          onClick={() => {\n            navigate(\"/\");\n          }}\n        >\n          로그인 하기\n        </GoSignUp>\n      </CheckUserWrapper>\n      <LoginFormWrap onSubmit={handleSubmit}>\n        <InputWrap>\n          <Label>email</Label>\n          <InputCheckWrapper>\n            <Input\n              type=\"email\"\n              name=\"email\"\n              placeholder=\"이메일\"\n              value={email}\n              onChange={(e) => {\n                setEmail(e.target.value);\n                setEmailCheck(false);\n              }}\n              fontSize=\"17px\"\n              width=\"340px\"\n              height=\"47px\"\n              borderR=\"7px\"\n              padding=\"10px\"\n              marginB=\"10\"\n              backC=\"white\"\n            />\n            <CheckUserInfoWrapper>\n              {emailCheck ? (\n                <AllowUserInfoIcon />\n              ) : (\n                <CheckUserInfoIcon onClick={checkUserEmail} />\n              )}\n            </CheckUserInfoWrapper>\n          </InputCheckWrapper>\n          {emailCheckResponse ? (\n            <>\n              {emailCheck ? (\n                <Satisfied>사용 가능한 이메일 입니다.</Satisfied>\n              ) : (\n                <Unsatisfied>이미 존재하는 이메일 입니다.</Unsatisfied>\n              )}\n            </>\n          ) : (\n            <Unsatisfied>사용 가능한 이메일인지 확인해주세요.</Unsatisfied>\n          )}\n        </InputWrap>\n        <InputWrap>\n          <Label>nickName</Label>\n          <InputCheckWrapper>\n            <Input\n              type=\"text\"\n              name=\"nickName\"\n              placeholder=\"닉네임 ( 15자리 이내 )\"\n              value={nickname}\n              onChange={(e) => {\n                setNickname(e.target.value);\n              }}\n              fontSize=\"17px\"\n              width=\"340px\"\n              height=\"47px\"\n              borderR=\"7px\"\n              padding=\"10px\"\n              marginB=\"10\"\n              backC=\"white\"\n            />\n            <CheckUserInfoWrapper>\n              {nicknameCheck ? (\n                <AllowUserInfoIcon />\n              ) : (\n                <CheckUserInfoIcon onClick={checkUserNickname} />\n              )}\n            </CheckUserInfoWrapper>\n          </InputCheckWrapper>\n          {nicknameCheckResponse ? (\n            <>\n              {nicknameCheck ? (\n                <Satisfied>사용 가능한 닉네임입니다.</Satisfied>\n              ) : (\n                <Unsatisfied>이미 존재하는 닉네임 입니다.</Unsatisfied>\n              )}\n            </>\n          ) : (\n            <Unsatisfied>사용 가능한 닉네임인지 확인해주세요.</Unsatisfied>\n          )}\n        </InputWrap>\n\n        <InputWrap>\n          <Label>password</Label>\n          <Input\n            type=\"password\"\n            name=\"password\"\n            placeholder=\"비밀번호\"\n            onBlur={handlePasswordFittBlur}\n            value={password}\n            onChange={(e) => {\n              setPassword(e.target.value);\n            }}\n            width=\"400px\"\n            height=\"50px\"\n            fontSize=\"17px\"\n            borderR=\"7px\"\n            padding=\"10px\"\n            marginB=\"10\"\n            backC=\"white\"\n            border={{ borderPx: \"1px\", color: \"#dddee3\" }}\n          />\n          {passwordFit && (\n            <Unsatisfied>\n              비밀번호는 영문, 숫자 조합 8자 이상 입력해 주세요.\n            </Unsatisfied>\n          )}\n        </InputWrap>\n        <InputWrap>\n          <Label>password check</Label>\n          <Input\n            type=\"password\"\n            name=\"passwordCheck\"\n            onBlur={handlePasswordDiscordBlur}\n            placeholder=\"비밀번호 확인\"\n            value={passwordCheck}\n            onChange={(e) => {\n              setPasswordCheck(e.target.value);\n            }}\n            width=\"400px\"\n            height=\"50px\"\n            fontSize=\"17px\"\n            borderR=\"7px\"\n            padding=\"10px\"\n            marginB=\"10\"\n            backC=\"white\"\n            border={{ borderPx: \"1px\", color: \"#dddee3\" }}\n          />\n          {passwordDiscord && (\n            <Unsatisfied>비밀번호가 일치하지 않습니다.</Unsatisfied>\n          )}\n        </InputWrap>\n        <LoginButton type=\"submit\">회원가입</LoginButton>\n        <EmptySpace></EmptySpace>\n      </LoginFormWrap>\n    </Middle>\n  );\n};\n\nexport default SignUp;\n\nexport const EmptySpace = styled.div`\n  width: 200px;\n  height: 100px;\n`;\n\nexport const CheckUserInfoWrapper = styled.div`\n  width: 60px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const CheckUserInfoIcon = styled(BsCheckCircle)`\n  font-size: 25px;\n  color: #dddee3;\n  cursor: pointer;\n`;\n\nexport const AllowUserInfoIcon = styled(BsCheckCircle)`\n  font-size: 25px;\n  color: #1ec997;\n  cursor: pointer;\n`;\n\nexport const InputCheckWrapper = styled.div`\n  font-size: 17px;\n  height: 50px;\n  width: 400px;\n  border-radius: 7px;\n  border: 1px solid #dddee3;\n  margin-bottom: 10px;\n  background-color: white;\n  display: flex;\n`;\n\nexport const InputWrap = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  margin-bottom: 20px;\n`;\n"],"names":["paddingDirection","paddingT","paddingL","paddingB","paddingR","marginDirection","marginL","marginR","marginB","marginT","borderDirection","borderL","borderR","borderT","borderB","Input","styled","input","_templateObject","_taggedTemplateLiteral","props","fontSize","height","width","padding","paddingValue","key","concat","paddingDynamic","marginValue","marginDynamic","backC","border","borderPx","color","borderValue","borderDynamic","Unsatisfied","div","_templateObject2","_templateObject3","Satisfied","_templateObject4","MainIcon","GiPunchBlast","_ref","_ref2","_ref3","_useState","useState","_useState2","_slicedToArray","email","setEmail","_useState3","_useState4","nickname","setNickname","_useState5","_useState6","password","setPassword","_useState7","_useState8","passwordCheck","setPasswordCheck","_useState9","_useState10","passwordDiscord","setPasswordDiscord","_useState11","_useState12","passwordFit","setPasswordFit","_useState13","_useState14","nicknameCheck","setNicknameCheck","_useState15","_useState16","emailCheck","setEmailCheck","_useState17","_useState18","emailCheckResponse","setEmailCheckResponse","_useState19","_useState20","nicknameCheckResponse","setNicknameCheckResponse","navigate","useNavigate","formData","_jsxs","Middle","children","WebTitleWrap","_jsx","WebTitle","CheckUserWrapper","CheckUserContent","GoSignUp","onClick","LoginFormWrap","onSubmit","_x","_asyncToGenerator","_regeneratorRuntime","mark","_callee","e","wrap","_context","prev","next","preventDefault","abrupt","axios","post","sent","alert","t0","console","error","stop","apply","arguments","InputWrap","Label","InputCheckWrapper","type","name","placeholder","value","onChange","target","CheckUserInfoWrapper","AllowUserInfoIcon","CheckUserInfoIcon","_callee2","response","_context2","get","data","_Fragment","_callee3","_context3","onBlur","passwordRegex","test","LoginButton","EmptySpace","BsCheckCircle","_templateObject5","_templateObject6"],"sourceRoot":""}