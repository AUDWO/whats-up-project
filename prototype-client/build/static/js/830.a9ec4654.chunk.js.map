{"version":3,"file":"static/js/830.a9ec4654.chunk.js","mappings":"oTAEaA,EAAwBC,EAAAA,GAAOC,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,+GAUlCC,EAAaJ,EAAAA,GAAOC,IAAGI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,4CAKvBG,EAAgBN,EAAAA,GAAOO,MAAKC,IAAAA,GAAAL,EAAAA,EAAAA,GAAA,sLAY5BM,EAAgBT,EAAAA,GAAOC,IAAGS,IAAAA,GAAAP,EAAAA,EAAAA,GAAA,kMAW1BQ,EAAkBX,EAAAA,GAAOC,IAAGW,IAAAA,GAAAT,EAAAA,EAAAA,GAAA,iMAkD5BU,GAtCqBb,EAAAA,GAAOC,IAAGa,IAAAA,GAAAX,EAAAA,EAAAA,GAAA,gHAQJH,EAAAA,GAAOC,IAAGc,IAAAA,GAAAZ,EAAAA,EAAAA,GAAA,QAEZH,EAAAA,GAAOgB,KAAIC,IAAAA,GAAAd,EAAAA,EAAAA,GAAA,mHAQVH,EAAAA,GAAOkB,MAAKC,IAAAA,GAAAhB,EAAAA,EAAAA,GAAA,oRAgBnBH,EAAAA,GAAOO,MAAKa,IAAAA,GAAAjB,EAAAA,EAAAA,GAAA,QAEjBH,EAAAA,GAAOqB,IAAGC,IAAAA,GAAAnB,EAAAA,EAAAA,GAAA,QAECH,EAAAA,GAAOC,IAAGsB,IAAAA,GAAApB,EAAAA,EAAAA,GAAA,iFAMnCqB,EAAkBxB,EAAAA,GAAOyB,SAAQC,IAAAA,GAAAvB,EAAAA,EAAAA,GAAA,0KAWjCwB,EAAsB3B,EAAAA,GAAOgB,KAAIY,IAAAA,GAAAzB,EAAAA,EAAAA,GAAA,mFAMjC0B,EAAS7B,EAAAA,GAAO8B,OAAMC,IAAAA,GAAA5B,EAAAA,EAAAA,GAAA,oHAOtB6B,GAAiBhC,EAAAA,EAAAA,IAAO6B,EAAP7B,CAAciC,IAAAA,GAAA9B,EAAAA,EAAAA,GAAA,2BAI/B+B,GAAuBlC,EAAAA,EAAAA,IAAO6B,EAAP7B,CAAcmC,IAAAA,GAAAhC,EAAAA,EAAAA,GAAA,6B,UCzHrCiC,EAAqBpC,EAAAA,GAAOC,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,4CAK/BkC,EAA4BrC,EAAAA,GAAOC,IAAGI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,mLAUtCmC,GAActC,EAAAA,GAAOqB,IAAGb,IAAAA,GAAAL,EAAAA,EAAAA,GAAA,0HASxBoC,GAAyBvC,EAAAA,GAAOC,IAAGS,IAAAA,GAAAP,EAAAA,EAAAA,GAAA,QAEnCqC,GAAkBxC,EAAAA,GAAOyC,KAAI7B,IAAAA,GAAAT,EAAAA,EAAAA,GAAA,8BAI7BuC,IAA0B1C,EAAAA,EAAAA,IAAO2C,EAAAA,IAAP3C,CAAgBc,IAAAA,GAAAX,EAAAA,EAAAA,GAAA,6QAiB1CyC,GAAa5C,EAAAA,GAAOC,IAAGc,IAAAA,GAAAZ,EAAAA,EAAAA,GAAA,iCAgBvB0C,IAVqB7C,EAAAA,GAAOC,IAAGgB,IAAAA,GAAAd,EAAAA,EAAAA,GAAA,gHAQHH,EAAAA,GAAOC,IAAGkB,IAAAA,GAAAhB,EAAAA,EAAAA,GAAA,QAEZH,EAAAA,GAAOgB,KAAII,IAAAA,GAAAjB,EAAAA,EAAAA,GAAA,oHAQrC2C,GAA2B9C,EAAAA,GAAOkB,MAAKI,IAAAA,GAAAnB,EAAAA,EAAAA,GAAA,oRAgBvC4C,GAAoB/C,EAAAA,GAAOO,MAAKgB,IAAAA,GAAApB,EAAAA,EAAAA,GAAA,Q,qBCe7C,OAnFA,WAAkC,IAAD6C,EAAAC,EAAAC,EAC/BC,GAAoCC,EAAAA,EAAAA,KAAeC,EAAAA,GAAAA,GAAW,eAAcC,GAAAC,EAAAA,EAAAA,GAAAJ,EAAA,GAArEK,EAAUF,EAAA,GAAEG,EAAaH,EAAA,GAChCI,GAAoDN,EAAAA,EAAAA,KAClDC,EAAAA,GAAAA,GAAW,uBACZM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAFME,EAAkBD,EAAA,GAAEE,EAAqBF,EAAA,GAG1CG,EAAW,IAAIC,SAEfC,EAAmB,SAAAC,GAAA,OAAAjB,EAAAA,IAAAkB,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,EAAOP,GAAQ,IAAAQ,EAAA,OAAAH,EAAAA,EAAAA,KAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAETC,EAAAA,EAAMC,KAAK,YAAad,GAAU,KAAD,EACf,OAD1CQ,EAAeE,EAAAK,KACrBC,QAAQC,IAAIT,EAAiB,mBAAmBE,EAAAQ,OAAA,SAEzCV,GAAe,OAAAE,EAAAC,KAAA,EAAAD,EAAAS,GAAAT,EAAA,SAEtBM,QAAQI,MAAKV,EAAAS,IAAQ,yBAAAT,EAAAW,OAAA,GAAAd,EAAA,mBAExBe,MAAA,KAAAC,UAAA,EA8BD,OACEC,EAAAA,GAAAA,KAAClD,EAAkB,CAAAmD,UACjBD,EAAAA,GAAAA,KAACjD,EAAyB,CACxBmD,WAnBiB,SAACC,GACtBA,EAAEC,gBACJ,EAkBMC,OAfU,SAAAC,GAAA,OAAA1C,EAAAA,IAAAgB,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAyB,EAAOJ,GAAC,IAAAK,EAAAC,EAAA,OAAA5B,EAAAA,EAAAA,KAAAI,MAAA,SAAAyB,GAAA,cAAAA,EAAAvB,KAAAuB,EAAAtB,MAAA,OAEsB,GAD/Ce,EAAEC,mBACII,EAAiBL,EAAEQ,aAAaC,MAAM,MACtBJ,EAAeK,KAAKC,WAAW,UAAS,CAAAJ,EAAAtB,KAAA,QACrB,OAAvCZ,EAASuC,OAAO,MAAOP,GAAgBE,EAAAtB,KAAA,EAChBV,EAAoBF,GAAU,KAAD,EAA9CiC,EAAQC,EAAAnB,KACdhB,EAAsBkC,EAASO,KAAKC,aACpC9C,EAAcsC,EAASO,KAAKE,KAAK,wBAAAR,EAAAb,OAAA,GAAAU,EAAA,MAEpCT,MAAA,KAAAC,UAAA,EAMwBE,SAElB/B,GACCiD,EAAAA,GAAAA,MAAC7D,GAAU,CAAA2C,SAAA,EACTD,EAAAA,GAAAA,KAAChD,GAAW,CAACoE,IAAK9C,EAAoB+C,IAAI,aAC1CrB,EAAAA,GAAAA,KAAC5C,GAAuB,CACtBkE,QAAS,WACP/C,EAAsB,KACxB,QAIJ4C,EAAAA,GAAAA,MAAClE,GAAsB,CAAAgD,SAAA,EACrBD,EAAAA,GAAAA,KAAC9C,GAAe,CAAA+C,SAAC,kGACjBkB,EAAAA,GAAAA,MAAC5D,GAAuB,CAAA0C,SAAA,EACtBD,EAAAA,GAAAA,KAACxC,GAAwB,CAAC+D,QAAQ,UAAStB,SAAC,2CAG5CD,EAAAA,GAAAA,KAACvC,GAAiB,CAChB+D,GAAG,UACHX,KAAK,OACLY,OAAO,UACPC,QAAM,EACNC,SAtDQ,SAAAC,GAAA,OAAAjE,EAAAA,IAAAiB,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAA+C,EAAO1B,GAAC,IAAAK,EAAAC,EAAA,OAAA5B,EAAAA,EAAAA,KAAAI,MAAA,SAAA6C,GAAA,cAAAA,EAAA3C,KAAA2C,EAAA1C,MAAA,OAEU,GADzCe,EAAEC,mBACII,EAAiBL,EAAE4B,OAAOnB,MAAM,MAChBJ,EAAeK,KAAKC,WAAW,UAAS,CAAAgB,EAAA1C,KAAA,QACrB,OAAvCZ,EAASuC,OAAO,MAAOP,GAAgBsB,EAAA1C,KAAA,EAChBV,EAAoBF,GAAU,KAAD,EAA9CiC,EAAQqB,EAAAvC,KACdhB,EAAsBkC,EAASO,KAAKC,aACpC9C,EAAcsC,EAASO,KAAKE,KAAK,wBAAAY,EAAAjC,OAAA,GAAAgC,EAAA,MAEpC/B,MAAA,KAAAC,UAAA,aAqDH,E,sBClEA,GAzB4B,WAC1B,OACEoB,EAAAA,GAAAA,MAACa,GAAAA,GAAM,CAACC,OAAQ,QAAQhC,SAAA,EACtBkB,EAAAA,GAAAA,MAACe,GAAAA,GAAuB,CAAAjC,SAAA,EACtBD,EAAAA,GAAAA,KAACmC,GAAAA,GAAe,CAAAlC,SAAC,yDACjBD,EAAAA,GAAAA,KAACoC,GAAAA,EAAyB,CACxBC,QAAS,YACTC,SAAU,iBAGdnB,EAAAA,GAAAA,MAACe,GAAAA,GAAuB,CAAAjC,SAAA,EACtBD,EAAAA,GAAAA,KAACmC,GAAAA,GAAe,CAAAlC,SAAC,4CACjBD,EAAAA,GAAAA,KAACoC,GAAAA,EAAyB,CACxBC,QAAS,WACTC,SAAU,0BAGdnB,EAAAA,GAAAA,MAACe,GAAAA,GAAuB,CAAAjC,SAAA,EACtBD,EAAAA,GAAAA,KAACmC,GAAAA,GAAe,CAAAlC,SAAC,8CACjBD,EAAAA,GAAAA,KAACoC,GAAAA,EAAyB,CAACC,QAAS,OAAQC,SAAU,qBAI9D,E,iECwKA,GA5KwB,WAAO,IAAD5E,EAAAC,EACtB4E,GAAuBC,EAAAA,EAAAA,KAC3BC,EAAAA,GAAAA,GAAc,kBAGhB5E,GAAoCC,EAAAA,EAAAA,KAAeC,EAAAA,GAAAA,GAAW,eAAcC,GAAAC,EAAAA,EAAAA,GAAAJ,EAAA,GAArE6E,EAAU1E,EAAA,GAAE2E,EAAa3E,EAAA,GAChCwB,QAAQC,IAAIiD,EAAY,4BACxB,IAAME,GAAsBC,EAAAA,EAAAA,UAC5BC,GAA8BC,EAAAA,EAAAA,UAAS,MAAKC,GAAA/E,EAAAA,EAAAA,GAAA6E,EAAA,GAArCG,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GAC1BG,GAA0BJ,EAAAA,EAAAA,UAAS,MAAKK,GAAAnF,EAAAA,EAAAA,GAAAkF,EAAA,GAAjCE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GAEtBhF,GAA2CN,EAAAA,EAAAA,KACzCyF,EAAAA,GAAAA,GAAgB,aACjBlF,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAFMoF,EAAWnF,EAAA,GAAEoF,EAAmBpF,EAAA,GAGvCqF,GAA4C5F,EAAAA,EAAAA,KAC1CyF,EAAAA,GAAAA,GAAgB,sBACjBI,GAAA1F,EAAAA,EAAAA,GAAAyF,EAAA,GAFME,EAAcD,EAAA,GAAEE,EAAiBF,EAAA,GAGxCG,GAA4ChG,EAAAA,EAAAA,KAC1CyF,EAAAA,GAAAA,GAAgB,gBACjBQ,GAAA9F,EAAAA,EAAAA,GAAA6F,EAAA,GAFME,EAAcD,EAAA,GAAEE,EAAiBF,EAAA,GAIlCG,GAAWC,EAAAA,GAAAA,KAwBXC,EAAgB,kBAAA1G,EAAAA,IAAAkB,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,IAAA,IAAAsF,EAAA,OAAAxF,EAAAA,EAAAA,KAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEMC,EAAAA,EAAMC,KAAK,QAAS,CAC7C4B,IAAKwB,EACLO,QAASA,EACTI,MAAOA,EACPG,aAAcA,EACdI,gBAAiBA,EACjBI,gBAAiBA,EACjBM,UAAW,EACXC,aAAc,IACb,KAAD,EATgB,OAAZF,EAAYnF,EAAAK,KAAAL,EAAAQ,OAAA,SAWX2E,GAAY,OAAAnF,EAAAC,KAAA,EAAAD,EAAAS,GAAAT,EAAA,SAEnBM,QAAQI,MAAKV,EAAAS,IAAQ,yBAAAT,EAAAW,OAAA,GAAAd,EAAA,mBAExBe,MAAA,KAAAC,UAAA,EAsBKyE,GAAcC,EAAAA,GAAAA,MAEpBC,GAAmBC,EAAAA,GAAAA,GAAY,CAC7BC,WAvBc,kBAAAjH,EAAAA,IAAAiB,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAA+C,IAAA,IAAApB,EAAA,OAAA5B,EAAAA,EAAAA,KAAAI,MAAA,SAAA6C,GAAA,cAAAA,EAAA3C,KAAA2C,EAAA1C,MAAA,UACZsD,EAAW,CAADZ,EAAA1C,KAAA,eAAA0C,EAAApC,OAAA,wBAAAoC,EAAA3C,KAAA,EAAA2C,EAAA1C,KAAA,EAUUgF,IAAmB,KAAD,EAE3B,OAFR3D,EAAQqB,EAAAvC,KACdgD,GAAqB,GAhDvBsB,GAAkB,GAClBI,GAAkB,GAClBR,GAAoB,GACpBd,GAAc,GA8CEb,EAAApC,OAAA,SACPe,GAAQ,QAAAqB,EAAA3C,KAAA,GAAA2C,EAAAnC,GAAAmC,EAAA,SAEftC,QAAQI,MAAKkC,EAAAnC,IAAQ,yBAAAmC,EAAAjC,OAAA,GAAAgC,EAAA,oBAExB/B,MAAA,KAAAC,UAAA,EAMC8E,UAAW,SAAC7D,GACVwD,EAAYM,kBAAkB,CAC5BC,SAAU,CAAC,sBAEbP,EAAYM,kBAAkB,CAC5BC,SAAU,CAAC,WAEbP,EAAYM,kBAAkB,CAC5BC,SAAU,CAAC,aAEf,IAZMC,EAAMN,EAANM,OAeR,OACEhF,EAAAA,GAAAA,KAAC7E,EAAa,CACZ8J,IAAKrC,EACLtB,QAAS,SAACnB,GACJA,EAAE4B,SAAWa,EAAoBsC,SACnC3C,GAAqB,EAEzB,EAAEtC,UAEFkB,EAAAA,GAAAA,MAAC9F,EAAe,CAAA4E,SAAA,EACdD,EAAAA,GAAAA,KAACmF,GAAAA,EAAS,CACRC,IAAK,CAAEC,MAAO,OAAQpD,OAAQ,OAAQqD,MAAO,QAC7CC,KAAM,CAAC,EACPC,IAAK,CACHC,OAAQ,CAAEC,EAAG,KAAMC,EAAG,MACtBC,QAAS,CAAEF,EAAG,KAAMG,EAAG,KAAMC,EAAG,KAAMH,EAAG,MACzCI,SAAU,cAEZC,IAAK,CAAEC,MAAO,OAAQC,MAAO,OAC7BC,OAAQjC,KAGVlE,EAAAA,GAAAA,KAACoG,GAAqB,KACtBpG,EAAAA,GAAAA,KAAA,OAAAC,UACED,EAAAA,GAAAA,KAAChF,EAAa,CACZqL,YAAY,oDACZC,MAAOjD,EACP1B,SAAU,SAACxB,GACTmD,EAASnD,EAAE4B,OAAOuE,MACpB,OAGFtC,IACAhE,EAAAA,GAAAA,KAACzE,EAAsB,CAAA0E,UACrBD,EAAAA,GAAAA,KAAC9D,EAAe,CACdmK,YAAY,qDACZC,MAAOrD,EACPtB,SAAU,SAACxB,GACT+C,EAAW/C,EAAE4B,OAAOuE,MACtB,OAINtG,EAAAA,GAAAA,KAACvF,EAAqB,CAAAwF,UACpBD,EAAAA,GAAAA,KAACuG,GAAmB,OAEtBpF,EAAAA,GAAAA,MAAC9E,EAAmB,CAAA4D,SAAA,EAClBD,EAAAA,GAAAA,KAACtD,EAAc,CACb4E,QAAS,SAACnB,GACRA,EAAEC,iBACF4E,GACF,EAAE/E,SACH,8BAGDD,EAAAA,GAAAA,KAACpD,EAAoB,CACnB0E,QAAS,WACPiB,GAAqB,EACvB,EAAEtC,SACH,iCAIHD,EAAAA,GAAAA,KAAA,OAAAC,UACED,EAAAA,GAAAA,KAAClF,EAAU,UAKrB,C","sources":["StyledComponents/MakePostStyle/MakePostModalCpSt.js","StyledComponents/MakePostStyle/MakePostDragDownImgCpSt.js","Components/MakePost/MakePostDragDownImgCp.js","Components/MakePost/PostAdvancedSetupCp.js","Components/MakePost/MakePostModalCp.js"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const MakePostOptionWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  width: 100%;\n  height: 250px;\n  margin-top: 60px;\n`;\n\n//----\n\nexport const EmptySpace = styled.div`\n  width: 200px;\n  height: 70px;\n`;\n\nexport const MakePostTitle = styled.input`\n  width: 100%;\n  height: 50px;\n  padding: 5px 10px 5px 10px;\n  border: none;\n  border-top: 1px solid #bbbbbb;\n  border-bottom: 1px solid #bbbbbb;\n  font-size: 18px;\n`;\n\n//-----\n\nexport const MakePostModal = styled.div`\n  position: fixed;\n  z-index: 17;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.5);\n  display: flex;\n  align-items: flex-start;\n  justify-content: center;\n`;\n\nexport const MakePostWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  z-index: 20;\n  width: 500px;\n  height: 100%;\n  overflow-y: auto;\n  background-color: white;\n  border-radius: 10px;\n  opacity: 1;\n`;\n\nexport const MakePostImgWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 50%;\n  height: 100%;\n`;\n\nexport const MakePostImgSelectWrapper = styled.div``;\n\nexport const MakePostImgFormWrapper = styled.form`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 300px;\n  height: 100px;\n`;\n\nexport const MakePostImgSelectButton = styled.label`\n  font-size: 15px;\n  font-weight: 600;\n  height: 45px;\n  line-height: 45px;\n  padding-left: 15px;\n  padding-right: 15px;\n  color: black;\n  border-radius: 10px;\n  border: 1px solid black;\n  &:hover {\n    background-color: #f1f4f7;\n  }\n  cursor: pointer;\n`;\n\nexport const MakePostImgInput = styled.input``;\n\nexport const MakePostImg = styled.img``;\n\nexport const MakePostContentWrapper = styled.div`\n  border-bottom: 1px solid #bbbbbb;\n  width: 100%;\n  height: auto;\n`;\n\nexport const MakePostContent = styled.textarea`\n  width: 100%;\n  height: 200px;\n  border: none;\n  line-height: 1.3;\n  padding: 15px 10px 10px 10px;\n  font-size: 18px;\n  outline: none;\n  resize: none;\n`;\n\nexport const MakePostFormWrapper = styled.form`\n  margin-top: 40px;\n  display: flex;\n  justify-content: space-around;\n`;\n\nexport const Button = styled.button`\n  background-color: #f8f9fa;\n  padding: 10px 20px 10px 20px;\n  font-size: 15px;\n  border-radius: 7px;\n`;\n\nexport const MakePostButton = styled(Button)`\n  color: black;\n`;\n\nexport const MakePostCancelButton = styled(Button)`\n  color: #ed203d;\n`;\n","import styled from \"styled-components\";\n\nimport { RxCross1 } from \"react-icons/rx\";\nexport const DragDownImgWrapper = styled.div`\n  width: 100%;\n  height: 600px;\n`;\n\nexport const DragDownImgContentWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  height: 600px;\n  cursor: pointer;\n  border-top: 1px solid #ededed;\n`;\n\nexport const DragDownImg = styled.img`\n  position: relative;\n  z-index: 2;\n  width: 500px;\n  height: 500px;\n  object-fit: cover;\n  border: none;\n`;\n\nexport const DragDownImgSignWrapper = styled.div``;\n\nexport const DragDownImgSign = styled.span`\n  font-size: 20px;\n`;\n\nexport const DragDownImgCancelButton = styled(RxCross1)`\n  padding: 5px;\n  position: absolute;\n  border-radius: 50%;\n  color: white;\n  background-color: #ed203d;\n  top: 10px;\n  right: 10px;\n  opacity: 0.5;\n  &:hover {\n    background-color: #ed203d;\n    opacity: 1;\n  }\n  font-size: 40px;\n  z-index: 3;\n`;\n\nexport const ImgWrapper = styled.div`\n  position: relative;\n`;\n\n//------눌러서 이미지 가져오기 코드들 (니중에 컴포넌트로 분리할 예정)\n\nexport const MakePostImgWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 50%;\n  height: 100%;\n`;\n\nexport const MakeStoryImgSelectWrapper = styled.div``;\n\nexport const MakeStoryImgFormWrapper = styled.form`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 300px;\n  height: 100px;\n`;\n\nexport const MakeStoryImgSelectButton = styled.label`\n  font-size: 15px;\n  font-weight: 600;\n  height: 45px;\n  line-height: 45px;\n  padding-left: 15px;\n  padding-right: 15px;\n  color: black;\n  border-radius: 10px;\n  border: 1px solid black;\n  &:hover {\n    background-color: #f1f4f7;\n  }\n  cursor: pointer;\n`;\n\nexport const MakeStoryImgInput = styled.input``;\n","import React from \"react\";\nimport { useRecoilState } from \"recoil\";\nimport axios from \"axios\";\n\n//Styled-Component\nimport {\n  DragDownImg,\n  DragDownImgWrapper,\n  DragDownImgContentWrapper,\n  ImgWrapper,\n  DragDownImgCancelButton,\n  DragDownImgSignWrapper,\n  DragDownImgSign,\n  MakeStoryImgFormWrapper,\n  MakeStoryImgSelectButton,\n  MakeStoryImgInput,\n} from \"../../StyledComponents/MakePostStyle/MakePostDragDownImgCpSt\";\n\n//Atom\nimport imgUrlAtom from \"../../store/imgUrlAtom\";\nimport { useMutation } from \"@tanstack/react-query\";\n\nfunction MakePostDragDownImgCp() {\n  const [imgUrlData, setImgUrlData] = useRecoilState(imgUrlAtom(\"postImgUrl\"));\n  const [imgOriginalUrlData, setImgOriginalUrlData] = useRecoilState(\n    imgUrlAtom(\"postImgOriginalUrl\")\n  );\n  const formData = new FormData();\n\n  const handleSubmitPostImg = async (formData) => {\n    try {\n      const imgDataResponse = await axios.post(\"/post/img\", formData);\n      console.log(imgDataResponse, \"imgDataResponse\");\n\n      return imgDataResponse;\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  //파일 선택 후 사진 고르는 함수\n  const handleFileSelect = async (e) => {\n    e.preventDefault();\n    const selectedImgUrl = e.target.files[0];\n    if (selectedImgUrl && selectedImgUrl.type.startsWith(\"image/\")) {\n      formData.append(\"img\", selectedImgUrl);\n      const response = await handleSubmitPostImg(formData);\n      setImgOriginalUrlData(response.data.originalUrl);\n      setImgUrlData(response.data.url);\n    }\n  };\n\n  const handleDragOver = (e) => {\n    e.preventDefault();\n  };\n\n  //사진을 drag-down형식으로 고르는 함수\n  const handleDrop = async (e) => {\n    e.preventDefault();\n    const selectedImgUrl = e.dataTransfer.files[0];\n    if (selectedImgUrl && selectedImgUrl.type.startsWith(\"image/\")) {\n      formData.append(\"img\", selectedImgUrl);\n      const response = await handleSubmitPostImg(formData);\n      setImgOriginalUrlData(response.data.originalUrl);\n      setImgUrlData(response.data.url);\n    }\n  };\n\n  return (\n    <DragDownImgWrapper>\n      <DragDownImgContentWrapper\n        onDragOver={handleDragOver}\n        onDrop={handleDrop}\n      >\n        {imgUrlData ? (\n          <ImgWrapper>\n            <DragDownImg src={imgOriginalUrlData} alt=\"Dropped\"></DragDownImg>\n            <DragDownImgCancelButton\n              onClick={() => {\n                setImgOriginalUrlData(null);\n              }}\n            />\n          </ImgWrapper>\n        ) : (\n          <DragDownImgSignWrapper>\n            <DragDownImgSign>이미지를 드래그하여 업로드하세요</DragDownImgSign>\n            <MakeStoryImgFormWrapper>\n              <MakeStoryImgSelectButton htmlFor=\"postImg\">\n                사진 선택하기\n              </MakeStoryImgSelectButton>\n              <MakeStoryImgInput\n                id=\"postImg\"\n                type=\"file\"\n                accept=\"image/*\"\n                hidden\n                onChange={handleFileSelect}\n              />\n            </MakeStoryImgFormWrapper>\n          </DragDownImgSignWrapper>\n        )}\n      </DragDownImgContentWrapper>\n    </DragDownImgWrapper>\n  );\n}\n\nexport default MakePostDragDownImgCp;\n","import React from \"react\";\n\n//Styled-Component\nimport {\n  Option,\n  ToggleAbleButtonWrapper,\n  AbleButtonTitle,\n} from \"../../StyledComponents/CommonCpStyle/AddvancedSetUp/AddvancedSetupCpSt\";\n\n//Component\nimport ToggleAbleSwitchComponent from \"../WriteDiary/ToggleAbleSwitchComponent\";\n\nconst PostAdvancedSetupCp = () => {\n  return (\n    <Option height={\"210px\"}>\n      <ToggleAbleButtonWrapper>\n        <AbleButtonTitle>좋아요 수 기능 해제</AbleButtonTitle>\n        <ToggleAbleSwitchComponent\n          inputId={\"likeCount\"}\n          atomName={\"postLike\"}\n        />\n      </ToggleAbleButtonWrapper>\n      <ToggleAbleButtonWrapper>\n        <AbleButtonTitle>댓글 기능 해제</AbleButtonTitle>\n        <ToggleAbleSwitchComponent\n          inputId={\"Comments\"}\n          atomName={\"postCommentForbid\"}\n        />\n      </ToggleAbleButtonWrapper>\n      <ToggleAbleButtonWrapper>\n        <AbleButtonTitle> 내용 작성 안함 </AbleButtonTitle>\n        <ToggleAbleSwitchComponent inputId={\"hits\"} atomName={\"postContent\"} />\n      </ToggleAbleButtonWrapper>\n    </Option>\n  );\n};\n\nexport default PostAdvancedSetupCp;\n","import React, { useRef, useState } from \"react\";\nimport axios from \"axios\";\nimport { useRecoilState, useSetRecoilState } from \"recoil\";\n\n//Styled-Component\nimport {\n  MakePostModal,\n  MakePostWrapper,\n  MakePostContentWrapper,\n  MakePostContent,\n  MakePostFormWrapper,\n  MakePostButton,\n  MakePostCancelButton,\n  MakePostOptionWrapper,\n  EmptySpace,\n  MakePostTitle,\n} from \"../../StyledComponents/MakePostStyle/MakePostModalCpSt\";\n\n//Components\nimport MakePostDragDownImgCp from \"./MakePostDragDownImgCp\";\nimport PostAdvancedSetupCp from \"./PostAdvancedSetupCp\";\n\n//Atoms\nimport ModalOpenAtom from \"../../store/ModalOpenAtom\";\nimport toggleValueAtom from \"../../store/ToggleValueAtom\";\nimport imgUrlAtom from \"../../store/imgUrlAtom\";\nimport { useMutation, useQueryClient } from \"@tanstack/react-query\";\n\nimport { useUserInfoValue } from \"../../contextApi/UserInfoProvider\";\nimport ProfileCp from \"../Common/Profile/ProfileCp\";\n\nconst MakePostModalCp = () => {\n  const setMakePostModalOpen = useSetRecoilState(\n    ModalOpenAtom(\"makePostModal\")\n  );\n\n  const [postimgUrl, setPostImgUrl] = useRecoilState(imgUrlAtom(\"postImgUrl\"));\n  console.log(postimgUrl, \"?>?>?>?>?><><><>?<?<?<?<\");\n  const postModalBackground = useRef();\n  const [content, setContent] = useState(null);\n  const [title, setTitle] = useState(null);\n\n  const [likeControl, setLikeCountControl] = useRecoilState(\n    toggleValueAtom(\"postLike\")\n  );\n  const [commentControl, setCommentControl] = useRecoilState(\n    toggleValueAtom(\"postCommentForbid\")\n  );\n  const [contentControl, setContentControl] = useRecoilState(\n    toggleValueAtom(\"postContent\")\n  );\n\n  const userInfo = useUserInfoValue();\n\n  /*\n  const formData = new FormData();\n  formData.append(\"img\", postimgUrl);*/\n\n  const handleReset = () => {\n    setCommentControl(false);\n    setContentControl(false);\n    setLikeCountControl(false);\n    setPostImgUrl(false);\n  };\n\n  /*\n  const handleSubmitPostImg = async () => {\n    try {\n      const imgDataResponse = await axios.post(\"/post/img\", formData);\n      console.log(imgDataResponse, \"imgDataResponse\");\n\n      return imgDataResponse;\n    } catch (error) {\n      console.error(error);\n    }\n  };*/\n  const handleSubmitPost = async () => {\n    try {\n      const postResponse = await axios.post(\"/post\", {\n        url: postimgUrl,\n        content: content,\n        title: title,\n        likeControl: !likeControl,\n        commentControl: !commentControl,\n        contentControl: !contentControl,\n        likeCount: 0,\n        commentCount: 0,\n      });\n\n      return postResponse;\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handlePost = async () => {\n    if (!postimgUrl) {\n      return;\n    }\n    try {\n      /*\n      const imgDataResponse = await handleSubmitPostImg();\n      console.log(\n        imgDataResponse.data,\n        \"진짜 제발 진짜 제발 진짜 제발 진짜 제발\"\n      );*/\n      const response = await handleSubmitPost();\n      setMakePostModalOpen(false);\n      handleReset();\n      return response;\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const queryClient = useQueryClient();\n\n  const { mutate } = useMutation({\n    mutationFn: handlePost,\n    onSuccess: (data) => {\n      queryClient.invalidateQueries({\n        queryKey: [\"postContentsInfo\"],\n      });\n      queryClient.invalidateQueries({\n        queryKey: [\"posts\"],\n      });\n      queryClient.invalidateQueries({\n        queryKey: [\"userInfo\"],\n      });\n    },\n  });\n\n  return (\n    <MakePostModal\n      ref={postModalBackground}\n      onClick={(e) => {\n        if (e.target === postModalBackground.current) {\n          setMakePostModalOpen(false);\n        }\n      }}\n    >\n      <MakePostWrapper>\n        <ProfileCp\n          pfI={{ width: \"50px\", height: \"50px\", basic: \"50px\" }}\n          pfIW={{}}\n          pfW={{\n            margin: { t: \"20\", b: \"20\" },\n            padding: { t: \"10\", l: \"10\", r: \"10\", b: \"10\" },\n            justifyC: \"flex-start\",\n          }}\n          pfN={{ fontS: \"16px\", fontW: \"600\" }}\n          pfInfo={userInfo}\n        />\n\n        <MakePostDragDownImgCp />\n        <div>\n          <MakePostTitle\n            placeholder=\"제목을 입력하세요\"\n            value={title}\n            onChange={(e) => {\n              setTitle(e.target.value);\n            }}\n          />\n        </div>\n        {!contentControl && (\n          <MakePostContentWrapper>\n            <MakePostContent\n              placeholder=\"내용을 입력하세요!\"\n              value={content}\n              onChange={(e) => {\n                setContent(e.target.value);\n              }}\n            />\n          </MakePostContentWrapper>\n        )}\n        <MakePostOptionWrapper>\n          <PostAdvancedSetupCp />\n        </MakePostOptionWrapper>\n        <MakePostFormWrapper>\n          <MakePostButton\n            onClick={(e) => {\n              e.preventDefault();\n              mutate();\n            }}\n          >\n            게시하기\n          </MakePostButton>\n          <MakePostCancelButton\n            onClick={() => {\n              setMakePostModalOpen(false);\n            }}\n          >\n            삭제하기\n          </MakePostCancelButton>\n        </MakePostFormWrapper>\n        <div>\n          <EmptySpace></EmptySpace>\n        </div>\n      </MakePostWrapper>\n    </MakePostModal>\n  );\n};\n\nexport default MakePostModalCp;\n"],"names":["MakePostOptionWrapper","styled","div","_templateObject","_taggedTemplateLiteral","EmptySpace","_templateObject2","MakePostTitle","input","_templateObject3","MakePostModal","_templateObject4","MakePostWrapper","_templateObject5","MakePostContentWrapper","_templateObject6","_templateObject7","form","_templateObject8","label","_templateObject9","_templateObject10","img","_templateObject11","_templateObject12","MakePostContent","textarea","_templateObject13","MakePostFormWrapper","_templateObject14","Button","button","_templateObject15","MakePostButton","_templateObject16","MakePostCancelButton","_templateObject17","DragDownImgWrapper","DragDownImgContentWrapper","DragDownImg","DragDownImgSignWrapper","DragDownImgSign","span","DragDownImgCancelButton","RxCross1","ImgWrapper","MakeStoryImgFormWrapper","MakeStoryImgSelectButton","MakeStoryImgInput","_ref","_ref2","_ref3","_useRecoilState","useRecoilState","imgUrlAtom","_useRecoilState2","_slicedToArray","imgUrlData","setImgUrlData","_useRecoilState3","_useRecoilState4","imgOriginalUrlData","setImgOriginalUrlData","formData","FormData","handleSubmitPostImg","_x","_asyncToGenerator","_regeneratorRuntime","mark","_callee","imgDataResponse","wrap","_context","prev","next","axios","post","sent","console","log","abrupt","t0","error","stop","apply","arguments","_jsx","children","onDragOver","e","preventDefault","onDrop","_x3","_callee3","selectedImgUrl","response","_context3","dataTransfer","files","type","startsWith","append","data","originalUrl","url","_jsxs","src","alt","onClick","htmlFor","id","accept","hidden","onChange","_x2","_callee2","_context2","target","Option","height","ToggleAbleButtonWrapper","AbleButtonTitle","ToggleAbleSwitchComponent","inputId","atomName","setMakePostModalOpen","useSetRecoilState","ModalOpenAtom","postimgUrl","setPostImgUrl","postModalBackground","useRef","_useState","useState","_useState2","content","setContent","_useState3","_useState4","title","setTitle","toggleValueAtom","likeControl","setLikeCountControl","_useRecoilState5","_useRecoilState6","commentControl","setCommentControl","_useRecoilState7","_useRecoilState8","contentControl","setContentControl","userInfo","useUserInfoValue","handleSubmitPost","postResponse","likeCount","commentCount","queryClient","useQueryClient","_useMutation","useMutation","mutationFn","onSuccess","invalidateQueries","queryKey","mutate","ref","current","ProfileCp","pfI","width","basic","pfIW","pfW","margin","t","b","padding","l","r","justifyC","pfN","fontS","fontW","pfInfo","MakePostDragDownImgCp","placeholder","value","PostAdvancedSetupCp"],"sourceRoot":""}